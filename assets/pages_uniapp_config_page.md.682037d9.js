import{_ as t,c as e,o,Q as l}from"./chunks/framework.8adc4ca2.js";const b=JSON.parse('{"title":"page.json","description":"","frontmatter":{"title":"page.json","order":1},"headers":[],"relativePath":"pages/uniapp/config/page.md","lastUpdated":1681395124000}'),a={name:"pages/uniapp/config/page.md"},n=l(`<h1 id="page-json" tabindex="-1">page.json <a class="header-anchor" href="#page-json" aria-label="Permalink to &quot;page.json&quot;">​</a></h1><p><code>pages.json</code> 文件用来对 uni-app 进行全局配置，决定页面文件的路径、窗口样式、原生的导航栏、底部的原生 tabbar 等</p><blockquote><p>在小程序中，<em>定位权限申请</em>等原属于<code>app.json</code>的内容，在 uni-app 中是在<code>manifest</code>中配置</p></blockquote><p>| 属性 | 类型 | 必填 | 描述 | | :------------ | :----------- | :----------- | :----------------------------- | --- | ------------------------ | | <code>globalStyle</code> | Object | 否 | 设置<strong>默认</strong>页面的<strong>窗口表现</strong> | | <code>pages</code> | Object Array | <strong>是</strong> | 设置<strong>页面路径</strong>及<strong>窗口表现</strong> | | <code>easycom</code> | Object | 否 | <strong>组件自动引入</strong>规则 | | <code>tabBar</code> | Object | 否 | 设置<strong>底部 tab</strong> 的表现 | | <code>condition</code> | Object | 否 | 启动<strong>模式配置</strong> | | <code>subPackages</code> | Object Array | 否 | 分包<strong>加载配置</strong> | | <code>preloadRule</code> | Object | 否 | 分包<strong>预下载规则</strong> | | <code>workers</code> | String | 否 | <code>Worker</code> 代码放置的目录 | | <code>leftWindow | topWindow | rightWindow</code> | Object | 否 | <strong>大屏<em>左 顶 右</em></strong>侧窗口 |</p><h2 id="globalstyle" tabindex="-1">globalStyle <a class="header-anchor" href="#globalstyle" aria-label="Permalink to &quot;globalStyle&quot;">​</a></h2><p>用于设置应用的状态栏、导航条、标题、窗口背景色等。</p><p>| 属性 | 类型 | 默认值 | 描述 | | :----------------------------- | :-------- | :----------- | :----------------------------------------------------------------------------------------------------------- | -------- | -------------------- | --------- | ------------ | --- | -------------- | | <code>navigationBarBackgroundColor</code> | HexColor | #F7F7F7 | <strong>导航栏背景</strong>颜色（同<strong>状态栏背景色</strong>） | | <code>navigationBarTextStyle</code> | String | white | <strong>导航栏标题颜色</strong>及<strong>状态栏前景颜色</strong>，仅支持 <code>black</code>/w<code>h</code>ite | | <code>navigationBarTitleText</code> | String | | <strong>导航栏标题</strong>文字内容 | | <code>navigationStyle</code> | String | default | <strong>导航栏样式</strong>，仅支持 <code>default</code>/<code>custom</code>。<code>custom</code>：取消默认原生导航栏 | | <code>backgroundColor</code> | HexColor | #ffffff | <strong>下拉窗口</strong>的<strong>背景</strong>色 | | <code>backgroundTextStyle</code> | String | dark | <strong>下拉 loading</strong> 的样式，仅支持 <code>dark</code> / <code>light</code> | | <code>enablePullDownRefresh</code> | Boolean | false | 是否开启<strong>下拉刷新</strong> | | <code>onReachBottomDistance</code> | Number | 50 | 页面<strong>上拉触底事件触发时距页面底部距离</strong>（只支持<code>px</code>） | | <code>backgroundColorTop</code> | HexColor | #ffffff | <strong>顶部窗口</strong>的<strong>背景</strong>色（bounce 回弹区域） | | <code>backgroundColorBottom</code> | HexColor | #ffffff | <strong>底部窗口</strong>的<strong>背景</strong>色（bounce 回弹区域） | | <code>titleImage</code> | String | | <strong>导航栏图片地址</strong>（替换当前文字标题） | | <code>transparentTitle</code> | String | none | <strong>导航栏整体</strong>（前景、背景）<strong>透明</strong>设置。<br><code>always</code>： 一直透 <code>auto</code>：滑动自适应 <code>none</code>：不透明 | | <code>titlePenetrate</code> | String | NO | <strong>导航栏</strong>点击<strong>穿透</strong> | | <code>pageOrientation</code> | String | portrait | <strong>横屏配置</strong>，屏幕旋转设置，仅支持 <code>auto</code> / <code>portrait</code> / <code>landscape</code> | | <code>animationType</code> | String | pop-in | <strong>窗口</strong>显示的<strong>动画效果</strong> | | <code>animationDuration</code> | Number | 300 | <strong>窗口</strong>显示动画的<strong>持续时间</strong>（<code>ms</code>） | | <code>app-plus | h5 | mp-alipay | mp-weixin | mp-baidu | mo-toutiao | mp-qq</code> | Object | | 各平台特定样式 | | <code>usingComponents</code> | Object | | <strong>引用小程序组件</strong> | | <code>renderingMode</code> | String | | <strong>同层渲染</strong>。<code>webrtc</code>(实时音视频) 无法正常时尝试配置 <code>seperated</code> 强制关掉同层 | | <code>leftWindow | topWindow | rightWindow</code> | Boolean | true | 是否显示 <code>leftWindow | topWindow | rightWIndow</code> | | <code>rpxCalcMaxDeviceWidth</code> | Number | 960 | <code>rpx</code> <strong>最大设备宽度</strong>（ <code>px</code>） | | <code>rpxCalcBaseDeviceWidth</code> | Number | 375 | <code>rpx</code> <strong>基准设备宽度</strong>（<code>px</code>）<br><strong>实际宽度</strong>超出 <code>rpx</code> <strong>最大设备宽度</strong>时<strong>将按基准宽度</strong>计算，单位 <code>px</code> | | <code>rpxCalcIncludeWidth</code> | Number | 750 | <code>rpx</code> 计算特殊处理的值，始终按实际的设备宽度计算（<code>rpx</code>） | | <code>maxWidth</code> | Number | 1190 | 当浏览器可见区域宽度（<code>px</code>） |</p><p><em>Tips</em></p><ul><li>支付宝小程序使用<code>titleImage</code>时必须使用<code>https</code>的图片链接地址（真机有效，模拟器无效）</li><li><code>globalStyle</code>中设置的<code>titleImage</code>会覆盖掉<code>pages</code>-&gt;<code>style</code>内的设置文字标题</li><li>使用 <code>maxWidth</code> 时，页面内<code>fixed</code>元素需要使用<code>--window-left</code>,<code>--window-right</code>来保证布局位置正确 <ul><li><code>&gt;maxWidth</code>，两侧留白</li><li><code>&lt;=maxWidth</code>，页面铺满</li><li><strong>不同页面支持配置不同</strong>的 maxWidth</li><li><code>maxWidth = leftWindow(可选)+page(页面主体)+rightWindow(可选)</code></li></ul></li></ul><h2 id="pages" tabindex="-1">pages <a class="header-anchor" href="#pages" aria-label="Permalink to &quot;pages&quot;">​</a></h2><p>通过 <code>pages</code> 节点<strong>配置应用由哪些页面组成</strong></p><p>pages 节点<em>接收一个数组</em>，<em>每个项都是一个对象</em></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;">String</td><td style="text-align:left;">配置页面路径</td></tr><tr><td style="text-align:left;"><code>style</code></td><td style="text-align:left;">Object</td><td style="text-align:left;">配置页面窗口表现</td></tr></tbody></table><p><em>Tips</em></p><ul><li>pages 节点的<strong>第一项为应用入口页</strong>（即首页）</li><li><strong>应用中新增/减少页面</strong>，都需要对 pages 数组进行修改</li><li>文件名<strong>不需要写后缀</strong>，框架会自动寻找路径下的页面资源</li></ul><h3 id="style" tabindex="-1">style <a class="header-anchor" href="#style" aria-label="Permalink to &quot;style&quot;">​</a></h3><p>设置每个页面的状态栏、导航条、标题、窗口背景色等</p><p>页面中配置项<strong>会覆盖 <code>globalStyle</code> 中相同的配置项</strong></p><p>| 属性 | 类型 | 默认值 | 描述 | | :----------------------------- | :-------- | :----------- | :----------------------------------------------------------------------------- | -------- | --------------------------------- | --------- | ------------ | --- | -------------- | | <code>navigationBarBackgroundColor</code> | HexColor | #000000 | 导航栏背景颜色（同状态栏背景色） | | <code>navigationBarTextStyle</code> | String | white | 导航栏标题颜色及状态栏前景颜色，仅支持 black/white | | <code>navigationBarTitleText</code> | String | | 导航栏标题文字内容 | | <code>navigationBarShadow</code> | Object | | <strong>导航栏阴影</strong> | | <code>navigationStyle</code> | String | default | 导航栏样式，仅支持 default/custom。 | | <code>disableScroll</code> | Boolean | false | 设置为 <code>true</code> 则<strong>页面整体不能上下滚动</strong>（bounce 效果*<code>globalStyle</code>中设置无效* | | <code>backgroundColor</code> | HexColor | #ffffff | 窗口的背景色 | | <code>backgroundTextStyle</code> | String | dark | 下拉 loading 的样式，仅支持 dark/light | | <code>enablePullDownRefresh</code> | Boolean | false | 是否开启下拉刷新 | | <code>onReachBottomDistance</code> | Number | 50 | 页面上拉触底事件触发时距页面底部距离，单位只支持 px | | <code>backgroundColorTop</code> | HexColor | #ffffff | 顶部窗口的背景色（bounce 回弹区域） | | <code>backgroundColorBottom</code> | HexColor | #ffffff | 底部窗口的背景色（bounce 回弹区域） | | <code>titleImage</code> | String | | 导航栏图片地址（替换当前文字标题） | | <code>transparentTitle</code> | String | none | 导航栏透明设置。支持 always / auto / none | | <code>titlePenetrate</code> | String | NO | 导航栏点击穿透 | | <code>app-plus | h5 | mp-alipay | mp-weixin | mp-baidu | mo-toutiao | mp-qq</code> | Object | | 各平台特定样式 | | usingComponents | Object | | 引用小程序组件 | | <code>leftWindow | topWindow | rightWindow</code> | Boolean | true | 当前页面是否显示<br><code>leftWindow | topWindow | rightWindow</code> | | maxWidth | Number | 1190 | 单位 px |</p><p><a href="https://uniapp.dcloud.io/collocation/pages?id=topwindow" target="_blank" rel="noreferrer">topWindow | leftWindow | rightWindow</a>：可解决宽屏适配问题</p><h3 id="自定义导航栏" tabindex="-1">自定义导航栏 <a class="header-anchor" href="#自定义导航栏" aria-label="Permalink to &quot;自定义导航栏&quot;">​</a></h3><p><strong>以下两种</strong>：原生导航栏不显示</p><ul><li><p><code>navigationStyle</code>设为<code>custom</code></p></li><li><p><code>titleNView</code>设为<code>false</code></p></li></ul><p><em>Tips</em></p><ul><li>非 H5 端，<strong>手机顶部状态栏区域会被页面内容覆盖</strong>。状态栏高度的 css 变量<code>--status-bar-height</code></li></ul><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status_bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">&lt;!-- 这里是状态栏 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> 状态栏下的文字 </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">status_bar</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--status-bar-height</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li><strong>前端导航栏搭配原生下拉刷新</strong><ul><li><em>微信小程序下 iOS</em>需要拉更长才能看到下拉刷新的三个点</li><li><em>Android</em>是从屏幕顶部下拉，无法从导航栏下方下拉</li><li>如果一定要从前端导航栏下拉，小程序下只能放弃原生下拉刷新，纯前端模拟，参考<a href="https://ext.dcloud.net.cn/plugin?id=343" target="_blank" rel="noreferrer">mescroll 插件</a>，但这样很容易产生性能问题。</li></ul></li><li>非 H5 端，<strong>前端导航盖不住<a href="https://uniapp.dcloud.io/component/native-component" target="_blank" rel="noreferrer">原生组件</a></strong><ul><li>如果页面有<code>video、map、textarea</code>(仅小程序)等<a href="https://uniapp.dcloud.io/component/native-component" target="_blank" rel="noreferrer">原生组件</a>，滚动时会覆盖住导航栏 <ul><li>小程序，使用<code>cover-view</code>来做导航栏，避免覆盖问题</li><li>App，使用<a href="https://uniapp.dcloud.io/collocation/pages?id=app-titlenview" target="_blank" rel="noreferrer">titleNView</a>或<a href="https://uniapp.dcloud.io/collocation/pages?id=app-subnvues" target="_blank" rel="noreferrer">subNVue</a>，体验更好</li></ul></li></ul></li><li><strong>前端组件在渲染速度上不如原生导航栏</strong><ul><li>原生导航可以在动画期间渲染，保证动画期间不白屏</li><li>前端导航栏，在新窗体进入的动画期间可能会整页白屏，越低端的手机越明显</li></ul></li><li>以上讨论的是前端自定义导航栏，在 App 侧，<strong>原生导航栏也提供了比小程序导航更丰富的自定义性</strong><ul><li><code>titleNView</code>：给原生导航栏提供更多配置，包括自定义按钮、滚动渐变效果、搜索框等，详见<a href="https://uniapp.dcloud.io/collocation/pages?id=app-titlenview" target="_blank" rel="noreferrer">titleNView</a></li><li><code>subNView</code>：使用 nvue 原生渲染，所有布局自己开发，具备一切自定义灵活度。详见<a href="https://uniapp.dcloud.io/collocation/pages?id=app-subnvues" target="_blank" rel="noreferrer">subNVue</a></li></ul></li><li>页面禁用原生导航栏后，<strong>改变状态栏的前景字体样式</strong><ul><li>可设置页面的 <code>navigationBarTextStyle</code> 属性（只能设置为 <code>black</code>或<code>white</code>）</li><li>单独设置状态栏颜色，App 端可使用<a href="http://www.html5plus.org/doc/zh_cn/navigator.html#plus.navigator.setStatusBarStyle" target="_blank" rel="noreferrer">plus.navigator.setStatusBarStyle</a>设置</li><li>低端 Android 手机（4.4）自身不支持设置状态栏前景色</li></ul></li></ul><p><strong>尽量使用原生导航</strong></p><ul><li>App 和 H5 下，uni-app 提供了灵活的处理方案：<a href="https://uniapp.dcloud.io/collocation/pages?id=app-titlenview" target="_blank" rel="noreferrer">titleNView</a>、<a href="https://uniapp.dcloud.io/collocation/pages?id=app-subnvues" target="_blank" rel="noreferrer">subNVue</a>、或整页使用 nvue。</li><li>在小程序下，因为其自身的限制，没有太好的方案。</li></ul><h2 id="easycom" tabindex="-1">easycom <a class="header-anchor" href="#easycom" aria-label="Permalink to &quot;easycom&quot;">​</a></h2><p>传统 vue 组件，需要<em>安装、引用、注册</em>，三个步骤后才能使用组件</p><p><code>easycom</code>将其精简为一步</p><ul><li>组件在项目的<code>components</code>目录</li><li>并符合<code>components/组件名称/组件名称.vue</code>目录结构</li></ul><blockquote><p><code>easycom</code>打包后会自动剔除没有使用的组件</p></blockquote><p><code>easycom</code>是自动开启</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>autoscan</code></td><td style="text-align:left;">Boolean</td><td style="text-align:left;">true</td><td style="text-align:left;">是否开启自动扫描，<strong>自动扫描符合条件的组件</strong></td></tr><tr><td style="text-align:left;"><code>custom</code></td><td style="text-align:left;">Object</td><td style="text-align:left;">-</td><td style="text-align:left;">正则方式<strong>自定义组件匹配规则</strong></td></tr></tbody></table><p><em>Tips</em></p><ul><li><code>easycom</code>方式引入组件是局部引入</li><li>组件名完全一致，<code>easycom</code>引入的优先级<strong>低于手动引入</strong>（区分连字符形式与驼峰形式）</li><li>考虑到编译速度，直接在<code>pages.json</code>内修改<code>easycom</code>不会触发重新编译，需要改动页面内容触发。</li><li><code>easycom</code>只处理<code>vue</code>组件。不处理后缀为<code>.nvue</code>的组件</li></ul><h2 id="tabbar" tabindex="-1">tabBar <a class="header-anchor" href="#tabbar" aria-label="Permalink to &quot;tabBar&quot;">​</a></h2><p>通过 <code>tabBar</code> 配置项指定一级导航栏，以及 tab 切换时显示的对应页</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;">HexColor</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;"></td><td style="text-align:left;"><strong>文字默认颜色</strong></td></tr><tr><td style="text-align:left;"><code>selectedColor</code></td><td style="text-align:left;">HexColor</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;"></td><td style="text-align:left;"><strong>文字选中</strong>时的颜色</td></tr><tr><td style="text-align:left;"><code>backgroundColor</code></td><td style="text-align:left;">HexColor</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;"></td><td style="text-align:left;"><strong>背景色</strong></td></tr><tr><td style="text-align:left;"><code>borderStyle</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">black</td><td style="text-align:left;"><strong>边框颜色</strong>，可选值 <code>black</code>/<code>white</code></td></tr><tr><td style="text-align:left;"><code>blurEffect</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">none</td><td style="text-align:left;">iOS <strong>高斯模糊</strong>效果<br><code>dark</code>/<code>extralight</code>/<code>light</code>/<code>none</code></td></tr><tr><td style="text-align:left;"><code>list</code></td><td style="text-align:left;">Array</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;"></td><td style="text-align:left;"><strong>tab 列表</strong>(<em>2-5</em>)</td></tr><tr><td style="text-align:left;"><code>position</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">bottom</td><td style="text-align:left;">可选值 <code>bottom</code>、<code>top</code></td></tr><tr><td style="text-align:left;"><code>fontSize</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">10px</td><td style="text-align:left;"><strong>文字默认大小</strong></td></tr><tr><td style="text-align:left;"><code>iconWidth</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">24px</td><td style="text-align:left;"><strong>图标默认宽度</strong>（高度等比例缩放）</td></tr><tr><td style="text-align:left;"><code>spacing</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">3px</td><td style="text-align:left;">图标和文字的<strong>间距</strong></td></tr><tr><td style="text-align:left;"><code>height</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">50px</td><td style="text-align:left;">tabBar <strong>默认高度</strong></td></tr><tr><td style="text-align:left;"><code>midButton</code></td><td style="text-align:left;">Object</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;"><strong>中间按钮</strong> 仅在 list 项为<em>偶数时有效</em></td></tr></tbody></table><p><em>Tips</em></p><ul><li><code>position</code> 为 top 时，不会显示 icon</li><li><code>list</code> 是一个数组，只能配置 <code>2 - 5</code> 个 tab，<strong>按数组的顺序排序</strong></li><li><strong><code>tabbar</code>页面切换时，首次加载可能渲染不及时</strong>，可在<code>tabbar</code>页面<code>onLoad</code>生命周期里先弹出一个等待雪花</li><li><strong><code>tabbar</code> 页面展现后就保留在内存</strong>，再次切换 <code>tabbar</code> 页面，触发<code>onShow</code>，不触发<code>onLoad</code>。</li></ul><p><strong>list</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pagePath</code></td><td style="text-align:left;">String</td><td style="text-align:left;">是</td><td style="text-align:left;">页面<strong>路径</strong>，<strong>必须</strong>在 pages 中<strong>先定义</strong></td></tr><tr><td style="text-align:left;"><code>text</code></td><td style="text-align:left;">String</td><td style="text-align:left;">是</td><td style="text-align:left;">tab<strong>按钮文字</strong>，在 App 和 H5 平台为非必填</td></tr><tr><td style="text-align:left;"><code>iconPath</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>图片路径</strong></td></tr><tr><td style="text-align:left;"><code>selectedIconPath</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>选中时</strong>的图片路径，同上</td></tr></tbody></table><p><em>Tips</em></p><p><code>iconPath</code></p><ul><li>icon 大小限制为 40kb，建议尺寸为 81px * 81px</li><li>当 postion 为 top 时，此参数无效</li><li>不支持网络图片，不支持字体图标</li></ul><p><strong>midButton</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>width</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">80px</td><td style="text-align:left;">中间按钮的<strong>宽度</strong><br>tabBar <strong>其它项为减去此宽度后平分</strong>，默认值为与其它项平分宽度</td></tr><tr><td style="text-align:left;"><code>height</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">50px</td><td style="text-align:left;">中间按钮的<strong>高度</strong><br>可大于 tabBar 高度，达到中间凸起的效果</td></tr><tr><td style="text-align:left;"><code>text</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">中间按钮的<strong>文字</strong></td></tr><tr><td style="text-align:left;"><code>iconPath</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">中间按钮的<strong>图片路径</strong></td></tr><tr><td style="text-align:left;"><code>iconWidth</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">24px</td><td style="text-align:left;">图片<strong>宽度</strong>（高度等比例缩放）</td></tr><tr><td style="text-align:left;"><code>backgroundImage</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">中间按钮的<strong>背景图片路径</strong></td></tr></tbody></table><p><code>midButton</code>没有<code>pagePath</code>，需<strong>监听点击事件</strong>。监听点击事件 API：<code>uni.onTabBarMidButtonTap</code></p><h3 id="js-api" tabindex="-1">js api <a class="header-anchor" href="#js-api" aria-label="Permalink to &quot;js api&quot;">​</a></h3><table><thead><tr><th>函数</th><th>说明</th><th></th></tr></thead><tbody><tr><td><a href="https://uniapp.dcloud.io/api/ui/tabbar?id=settabbaritem" target="_blank" rel="noreferrer"><code>uni.setTabBarItem</code>(OBJECT)</a></td><td>设置 tabBar <strong>某一项的内容</strong></td><td></td></tr><tr><td><a href="https://uniapp.dcloud.io/api/ui/tabbar?id=settabbarstyle" target="_blank" rel="noreferrer"><code>uni.setTabBarStyle</code>(OBJECT)</a></td><td>设置 tabBar 的<strong>整体样式</strong></td><td></td></tr><tr><td><a href="https://uniapp.dcloud.io/api/ui/tabbar?id=hidetabbar" target="_blank" rel="noreferrer"><code>uni.hideTabBar</code>(OBJECT)</a></td><td><strong>隐藏</strong> tabBar</td><td></td></tr><tr><td><a href="https://uniapp.dcloud.io/api/ui/tabbar?id=showtabbar" target="_blank" rel="noreferrer"><code>uni.showTabBar</code>(OBJECT)</a></td><td><strong>显示</strong> tabBar</td><td></td></tr><tr><td><a href="https://uniapp.dcloud.io/api/ui/tabbar?id=settabbarbadge" target="_blank" rel="noreferrer"><code>uni.setTabBarBadge</code>(OBJECT)</a></td><td>为 tabBar 某项的<strong>右上角添加文本</strong></td><td></td></tr><tr><td><a href="https://uniapp.dcloud.io/api/ui/tabbar?id=showtabbarreddot" target="_blank" rel="noreferrer"><code>uni.showTabBarRedDot</code>(OBJECT)</a></td><td><strong>显示</strong> tabBar 某项的<strong>右上角的红点</strong></td><td></td></tr><tr><td><a href="https://uniapp.dcloud.io/api/ui/tabbar?id=hidetabbarreddot" target="_blank" rel="noreferrer"><code>uni.hideTabBarRedDot</code>(OBJECT)</a></td><td><strong>隐藏</strong> tabBar 某项的<strong>右上角的红点</strong></td><td></td></tr><tr><td><a href="https://uniapp.dcloud.io/api/ui/tabbar?id=ontabbarmidbuttontap" target="_blank" rel="noreferrer"><code>uni.onTabBarMidButtonTap</code>(CALLBACK)</a></td><td>监听<strong>中间按钮点击</strong>事件</td><td></td></tr></tbody></table><blockquote><p>大部分操作 tabbar 的 API 需要在 tabbar 渲染后才能使用，避免在 tabbar 未初始化前使用</p></blockquote><p><em>Tips</em></p><ul><li>跳转到 tabbar 页面，<strong>只能使用<a href="https://uniapp.dcloud.io/api/router?id=switchtab" target="_blank" rel="noreferrer">uni.switchTab</a></strong>；使用<em>navigator 组件跳转</em>时必须设置<a href="https://uniapp.dcloud.io/component/navigator" target="_blank" rel="noreferrer">open-type=&quot;switchTab&quot;</a></li><li>tabbar 的<strong>默认高度在不同平台不一样</strong>。App 端为 50px，与 H5 端一致。</li><li><strong>tabbar 在 H5 端</strong>是 div 模拟，<strong>属于前端屏幕窗口的一部分</strong><ul><li>在 tabbar 上方 10px 的按钮，<code>bottom: calc(var(--window-bottom) + 10px)</code></li></ul></li><li><strong>先登录、后进入 tab 页面</strong>，不需要把登录页设为首页，首页仍然是 tabbar 页</li><li><strong>前端弹出遮罩层挡不住 tabbar 的问题</strong><ul><li>跨端处理：动态隐藏 tabbar。</li><li>App 端可以使用<code>plus.nativeObj.vie</code>w 或<code>subNVue</code>做弹出和遮罩</li><li><a href="https://ext.dcloud.net.cn/plugin?id=69" target="_blank" rel="noreferrer">底部原生图标分享菜单例子</a></li></ul></li><li><strong>PC 宽屏</strong>上，当页面<strong>存在</strong><code>topWindow</code>或<code>leftWindow</code>或<code>rightWindow</code>等<strong>多窗体结构</strong>时，<strong>tabBar 自动隐藏</strong>（HBuilderX 2.9.9），使用 <a href="https://uniapp.dcloud.io/component/custom-tab-bar" target="_blank" rel="noreferrer">custom-tab-bar 组件</a> 配置 tabBar 的位置</li></ul><p><strong>自定义<code>tabbar</code></strong></p><p><strong>除了 H5 端</strong>，<em>自定义<code>tabBar</code><em>的性能体验会</em>低于原生<code>tabBar</code></em></p><ul><li><strong>普通自定义<code>tabBar</code></strong>：使用 view 自行绘制 tabBar。 <ul><li>页面是<strong>多页</strong>方式，切换 tabBar 将无法保持底部 tabBar 一直显示，这种情况建议单页方式</li><li><strong>单页</strong>方式，复杂页面，应用性能会下降明显，需减少页面复杂度</li><li><strong>App 端</strong>，nvue 单页的性能会显著高于 vue 页面</li></ul></li><li><strong>微信小程序自定义<code>tabbar</code></strong>：微信提供一直基于 webview 自定义 tabBar 的方案。该功能体验不佳，不太推荐使用。</li><li><strong>原生的<code>tabbar</code>有且只有一个且在首页</strong>。二级页如需的 tab，需自行编写 view 来实现。一般二级页面更适合的导航是 <a href="https://ext.dcloud.net.cn/plugin?id=54" target="_blank" rel="noreferrer">segement 组件</a></li></ul><h2 id="condition" tabindex="-1">Condition <a class="header-anchor" href="#condition" aria-label="Permalink to &quot;Condition&quot;">​</a></h2><p>启动模式配置，仅开发期间生效，用于模拟直达页面的场景</p><p><strong>属性</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">是否必填</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>current</code></td><td style="text-align:left;">Number</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;"><strong>当前激活模式</strong>，list 节点的索引值</td></tr><tr><td style="text-align:left;"><code>list</code></td><td style="text-align:left;">Array</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">启动<strong>模式列表</strong></td></tr></tbody></table><p><strong>list</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">是否必填</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">String</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">启动模式<strong>名称</strong></td></tr><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;">String</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">启动页面<strong>路径</strong></td></tr><tr><td style="text-align:left;"><code>query</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">启动<strong>参数</strong>，可在页面的 <a href="https://uniapp.dcloud.io/collocation/frame/lifecycle?id=%E9%A1%B5%E9%9D%A2%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F" target="_blank" rel="noreferrer">onLoad</a> 函数里获得</td></tr></tbody></table><h2 id="subpackages" tabindex="-1"><a href="https://uniapp.dcloud.io/collocation/pages?id=subpackages" target="_blank" rel="noreferrer">subPackages</a> <a class="header-anchor" href="#subpackages" aria-label="Permalink to &quot;[subPackages](https://uniapp.dcloud.io/collocation/pages?id=subpackages)&quot;">​</a></h2><p>小程序有体积和资源加载限制，各家小程序平台提供了分包方式，优化小程序的下载和启动速度</p><p><strong>主包</strong>：放置默认启动页面/TabBar 页面，以及一些所有分包都需用到公共资源/JS 脚本</p><p><strong>分包</strong>：根据<code>pages.json</code>的配置进行划分</p><p><strong>小程序启动</strong></p><ul><li><strong>默认会下载主包</strong>并启动主包内页面</li><li>当用户<strong>进入分包</strong>内某个页面时，会把<strong>对应分包自动下载</strong></li></ul><p>subPackages 节点接收一个数组，数组每一项都是应用的子包</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">是否必填</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>root</code></td><td style="text-align:left;">String</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">子包的根目录</td></tr><tr><td style="text-align:left;"><code>pages</code></td><td style="text-align:left;">Array</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">子包由哪些页面组成，参数同 <a href="https://uniapp.dcloud.io/collocation/pages?id=pages" target="_blank" rel="noreferrer">pages</a></td></tr></tbody></table><h2 id="preloadrule" tabindex="-1"><a href="https://uniapp.dcloud.io/collocation/pages?id=preloadrule" target="_blank" rel="noreferrer">preloadRule</a> <a class="header-anchor" href="#preloadrule" aria-label="Permalink to &quot;[preloadRule](https://uniapp.dcloud.io/collocation/pages?id=preloadrule)&quot;">​</a></h2><p>分包预载配置。</p><p>配置 preloadRule 后，在进入小程序某个页面时，由框架<strong>自动预下载可能需要的分包</strong>，提升进入后续分包页面时的启动速度</p><p><code>preloadRule</code> 中，<code>key</code> 是页面路径，<code>value</code> 是进入此页面的预下载配置</p><table><thead><tr><th>字段</th><th>类型</th><th>必填</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>packages</code></td><td>StringArray</td><td>是</td><td>无</td><td>进入页面后预下载分包的 <code>root</code> 或 <code>name</code>。<code>__APP__</code> 表示主包。</td></tr><tr><td><code>network</code></td><td>String</td><td>否</td><td>wifi</td><td>在指定网络下预下载，可选值为：<code>all</code>（不限网络）、<code>wifi</code>（仅 wifi 下预下载）</td></tr></tbody></table><blockquote><p>app 的分包，同样支持 preloadRule，但网络规则无效</p></blockquote>`,79),d=[n];function r(s,i,c,g,p,f){return o(),e("div",null,d)}const h=t(a,[["render",r]]);export{b as __pageData,h as default};
