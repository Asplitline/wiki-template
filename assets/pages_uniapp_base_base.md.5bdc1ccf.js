import{_ as t,c as e,o as a,Q as l}from"./chunks/framework.8adc4ca2.js";const u=JSON.parse('{"title":"入门","description":"","frontmatter":{"title":"入门","order":1},"headers":[],"relativePath":"pages/uniapp/base/base.md","lastUpdated":1681395124000}'),s={name:"pages/uniapp/base/base.md"},o=l(`<h1 id="框架简介" tabindex="-1">框架简介 <a class="header-anchor" href="#框架简介" aria-label="Permalink to &quot;框架简介&quot;">​</a></h1><h2 id="开发规范" tabindex="-1">开发规范 <a class="header-anchor" href="#开发规范" aria-label="Permalink to &quot;开发规范&quot;">​</a></h2><p>为了实现多端兼容，综合考虑编译速度、运行性能等因素，<code>uni-app</code> 约定了如下开发规范：</p><ul><li><strong>页面文件</strong>：遵循 <a href="https://vue-loader.vuejs.org/zh/spec.html" target="_blank" rel="noreferrer">Vue 单文件组件 (SFC) 规范</a></li><li><strong>组件标签</strong>：靠近小程序规范，详见<a href="https://uniapp.dcloud.io/component/README" target="_blank" rel="noreferrer">uni-app 组件规范</a></li><li><strong>接口能力</strong>：（JS API）靠近微信小程序规范，但需将前缀 <code>wx</code> 替换为 <code>uni</code>，详见<a href="https://uniapp.dcloud.io/api/README" target="_blank" rel="noreferrer">uni-app 接口规范</a></li><li><strong>数据绑定及事件处理</strong>：同 <code>Vue.js</code> 规范，同时补充了 App 及页面的生命周期</li><li>为兼容多端运行，<em>建议使用 flex 布局进行开发</em></li></ul><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">┌─uniCloud</span><span style="color:#A6ACCD;">              </span><span style="color:#C3E88D;">云空间目录，阿里云为uniCloud-aliyun,腾讯云为uniCloud-tcb（详见uniCloud）</span></span>
<span class="line"><span style="color:#FFCB6B;">│─components</span><span style="color:#A6ACCD;">            </span><span style="color:#C3E88D;">符合vue组件规范的uni-app组件目录</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">└─comp-a.vue</span><span style="color:#A6ACCD;">         </span><span style="color:#C3E88D;">可复用的a组件</span></span>
<span class="line"><span style="color:#FFCB6B;">├─hybrid</span><span style="color:#A6ACCD;">                </span><span style="color:#C3E88D;">App端存放本地html文件的目录，详见</span></span>
<span class="line"><span style="color:#FFCB6B;">├─platforms</span><span style="color:#A6ACCD;">             </span><span style="color:#C3E88D;">存放各平台专用页面的目录，详见</span></span>
<span class="line"><span style="color:#FFCB6B;">├─pages</span><span style="color:#A6ACCD;">                 </span><span style="color:#C3E88D;">业务页面文件存放的目录</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">├─index</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">│</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">└─index.vue</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">index页面</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">└─list</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">     </span><span style="color:#C3E88D;">└─list.vue</span><span style="color:#A6ACCD;">        </span><span style="color:#C3E88D;">list页面</span></span>
<span class="line"><span style="color:#FFCB6B;">├─static</span><span style="color:#A6ACCD;">                </span><span style="color:#C3E88D;">存放应用引用的本地静态资源（如图片、视频等）的目录，注意：静态资源只能存放于此</span></span>
<span class="line"><span style="color:#FFCB6B;">├─uni_modules</span><span style="color:#A6ACCD;">           </span><span style="color:#C3E88D;">存放[uni_module]</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">/uni_modules</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">规范的插件。</span></span>
<span class="line"><span style="color:#FFCB6B;">├─wxcomponents</span><span style="color:#A6ACCD;">          </span><span style="color:#C3E88D;">存放小程序组件的目录，详见</span></span>
<span class="line"><span style="color:#FFCB6B;">├─main.js</span><span style="color:#A6ACCD;">               </span><span style="color:#C3E88D;">Vue初始化入口文件</span></span>
<span class="line"><span style="color:#FFCB6B;">├─App.vue</span><span style="color:#A6ACCD;">               </span><span style="color:#C3E88D;">应用配置，用来配置App全局样式以及监听</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">应用生命周期</span></span>
<span class="line"><span style="color:#FFCB6B;">├─manifest.json</span><span style="color:#A6ACCD;">         </span><span style="color:#C3E88D;">配置应用名称、appid、logo、版本等打包信息，详见</span></span>
<span class="line"><span style="color:#FFCB6B;">└─pages.json</span><span style="color:#A6ACCD;">            </span><span style="color:#C3E88D;">配置页面路由、导航条、选项卡等页面类信息，详见</span></span></code></pre></div><p><em>Tips</em></p><ul><li>编译到任意平台时，<code>static</code> 目录下的文件均会被完整打包进去，且不会编译。非 <code>static</code> 目录下的文件（vue、js、css 等）只有<em>被引用到才会被打包</em>编译进去。</li><li><code>static</code> 目录下的 <code>js</code> 文件不会被编译，如果里面有 <code>es6</code> 的代码，不经过转换直接运行，在手机设备上会报错。</li><li><code>css</code>、<code>less/scss</code> 等资源不要放在 <code>static</code> 目录下，建议这些公用的资源放在自建的 <code>common</code> 目录下。</li><li>HbuilderX 1.9.0+ 支持在根目录创建 <code>ext.json</code>、<code>sitemap.json</code> 等小程序需要的文件。</li></ul><h2 id="资源路径" tabindex="-1">资源路径 <a class="header-anchor" href="#资源路径" aria-label="Permalink to &quot;资源路径&quot;">​</a></h2><h3 id="静态资源" tabindex="-1">静态资源 <a class="header-anchor" href="#静态资源" aria-label="Permalink to &quot;静态资源&quot;">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 绝对路径，/static指根目录下的static目录，在cli项目中/static指src目录下的static目录 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">image</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">logo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/static/logo.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">image</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">logo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@/static/logo.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 相对路径 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">image</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">logo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../../static/logo.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li><code>@</code>开头的绝对路径以及相对路径会经过 base64 转换规则校验</li><li>引入的静态资源在非 h5 平台，均不转为 base64。H5 平台，小于 4kb 的资源会被转换成 base64，其余不转。</li><li>自<code>HBuilderX 2.6.6</code>起<code>template</code>内支持<code>@</code>开头路径引入静态资源，旧版本不支持此方式</li><li>App 平台自<code>HBuilderX 2.6.9</code>起<code>template</code>节点中引用静态资源文件时（如：图片），调整查找策略为【基于当前文件的路径搜索】，与其他平台保持一致</li><li>支付宝小程序组件内 image 标签不可使用相对路径</li></ul><h3 id="js-文件引入" tabindex="-1">js 文件引入 <a class="header-anchor" href="#js-文件引入" aria-label="Permalink to &quot;js 文件引入&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 绝对路径，@指向项目根目录，在cli项目中@指向src目录</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> add </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/common/add.js</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 相对路径</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> add </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../../common/add.js</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><ul><li>js 文件不支持使用<code>/</code>开头的方式引入</li></ul><h3 id="css-文件引入" tabindex="-1">css 文件引入 <a class="header-anchor" href="#css-文件引入" aria-label="Permalink to &quot;css 文件引入&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 绝对路径 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/common/uni.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/common/uni.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 相对路径 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../../common/uni.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p><em>Tips</em></p><ul><li>引入字体图标请参考，<a href="https://uniapp.dcloud.io/frame?id=%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87" target="_blank" rel="noreferrer">字体图标</a></li><li><code>@</code>开头的绝对路径以及相对路径会经过 base64 转换规则校验</li><li>不支持本地图片的平台，小于 40kb，一定会转 base64。（共四个平台<code>mp-weixin, mp-qq, mp-toutiao, app v2</code>）</li><li>h5 平台，小于 4kb 会转 base64，超出 4kb 时不转。</li><li>其余平台不会转 base64</li></ul><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2><h3 id="应用生命周期" tabindex="-1">应用生命周期 <a class="header-anchor" href="#应用生命周期" aria-label="Permalink to &quot;应用生命周期&quot;">​</a></h3><p><strong>应用生命周期仅可在<code>App.vue</code>中监听，在其它页面监听无效</strong></p><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>onLaunch</code></td><td style="text-align:left;">当<code>uni-app</code> <em>初始化完成</em>时触发（全局只触发<em>一次</em>）</td></tr><tr><td style="text-align:left;"><code>onShow</code></td><td style="text-align:left;">当 <code>uni-app</code> <em>启动</em>或<em>后台进入前台</em></td></tr><tr><td style="text-align:left;"><code>onHide</code></td><td style="text-align:left;">当 <code>uni-app</code> <em>前台进入后台</em></td></tr><tr><td style="text-align:left;"><code>onError</code></td><td style="text-align:left;">当 <code>uni-app</code> 报错时触发</td></tr><tr><td style="text-align:left;"><code>onUniNViewMessage</code></td><td style="text-align:left;">对 <code>nvue</code> 页面发送的数据进行监听，可参考 <a href="https://uniapp.dcloud.io/nvue-api?id=communication" target="_blank" rel="noreferrer">nvue 向 vue 通讯</a></td></tr><tr><td style="text-align:left;"><code>onUnhandledRejection</code></td><td style="text-align:left;">对未处理的 Promise 拒绝事件监听函数（2.8.1+）</td></tr><tr><td style="text-align:left;"><code>onPageNotFound</code></td><td style="text-align:left;">页面不存在监听函数</td></tr><tr><td style="text-align:left;"><code>onThemeChange</code></td><td style="text-align:left;">监听系统主题变化</td></tr></tbody></table><blockquote><p><code>onlaunch</code>里进行页面跳转，如遇白屏报错，请参考<a href="https://ask.dcloud.net.cn/article/35942" target="_blank" rel="noreferrer">https://ask.dcloud.net.cn/article/35942</a></p></blockquote><h3 id="页面生命周期" tabindex="-1">页面生命周期 <a class="header-anchor" href="#页面生命周期" aria-label="Permalink to &quot;页面生命周期&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th><th style="text-align:left;">最低版本</th></tr></thead><tbody><tr><td style="text-align:left;"><code>onInit</code></td><td style="text-align:left;">监听<strong>页面初始化**</strong><br>参数：同 <code>onLoad</code> 参数，<em>上个页面传递的数据</em><br>参数类型： <code>Object</code>（用于页面传参），<em>触发时机早于 <code>onLoad</code></em></td><td style="text-align:left;">百度小程序</td><td style="text-align:left;">3.1.0+</td></tr><tr><td style="text-align:left;"><code>onLoad</code></td><td style="text-align:left;">监听<strong>页面加载**</strong><br>参数：<em>上个页面传递的数据</em><br>参数类型：<code>Object</code>（用于页面传参）</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onShow</code></td><td style="text-align:left;">监听<strong>页面显示</strong>。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onReady</code></td><td style="text-align:left;">监听<strong>页面初次渲染完成</strong>。注意如果渲染速度快，会在页面进入动画完成前触发</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onHide</code></td><td style="text-align:left;">监听<strong>页面隐藏</strong></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onUnload</code></td><td style="text-align:left;">监听页面卸载</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onResize</code></td><td style="text-align:left;">监听<strong>窗口尺寸变化</strong></td><td style="text-align:left;">App、微信小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onPullDownRefresh</code></td><td style="text-align:left;">监听<strong>用户下拉动作</strong>，用于下拉刷新</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onReachBottom</code></td><td style="text-align:left;"><strong>页面滚动到底部</strong>的事件（不是 scroll-view 滚到底），常用于下拉下一页数据。</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onTabItemTap</code></td><td style="text-align:left;"><strong>点击 tab 时触发</strong>，参数：<code>Object</code></td><td style="text-align:left;">微信小程序、支付宝小程序、百度小程序、H5、App（自定义组件模式）</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onShareAppMessage</code></td><td style="text-align:left;">用户<strong>点击右上角分享</strong></td><td style="text-align:left;">微信小程序、百度小程序、字节跳动小程序、支付宝小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onPageScroll</code></td><td style="text-align:left;">监听<strong>页面滚动</strong>，参数：<code>Object</code></td><td style="text-align:left;">nvue 暂不支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onNavigationBarButtonTap</code></td><td style="text-align:left;">监听<strong>原生标题栏按钮点击</strong>事件，参数：<code>Object</code></td><td style="text-align:left;">App、H5</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onBackPress</code></td><td style="text-align:left;"><strong>监听页面返回</strong></td><td style="text-align:left;">app、H5、支付宝小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>onNavigationBarSearchInputChanged</code></td><td style="text-align:left;">监听<strong>原生标题栏搜索输入框<em>输入内容</em></strong>变化事件</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;"><code>onNavigationBarSearchInputConfirmed</code></td><td style="text-align:left;">监听<strong>原生标题栏搜索输入框<em>搜索</em></strong>事件，用户点击软键盘上的“搜索”按钮时触发。</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;"><code>onNavigationBarSearchInputClicked</code></td><td style="text-align:left;">监听<strong>原生标题栏搜索输入框<em>点击</em></strong>事件</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;"><code>onShareTimeline</code></td><td style="text-align:left;">监听用户点击<strong>右上角转发</strong>到朋友圈</td><td style="text-align:left;">微信小程序</td><td style="text-align:left;">2.8.1+</td></tr><tr><td style="text-align:left;"><code>onAddToFavorites</code></td><td style="text-align:left;">监听用户点击<strong>右上角收藏</strong></td><td style="text-align:left;">微信小程序</td><td style="text-align:left;">2.8.1+</td></tr></tbody></table><blockquote><p>页面关闭时，只会触发 <code>onUnload</code>，不会触发<code>onHide</code></p></blockquote><h4 id="oninit使用注意" tabindex="-1"><code>onInit</code>使用注意 <a class="header-anchor" href="#oninit使用注意" aria-label="Permalink to &quot;\`onInit\`使用注意&quot;">​</a></h4><ul><li><em>仅百度小程序</em>基础库 <em>3.260</em> 以上支持 <code>onInit</code> 生命周期</li><li>其他版本或平台可以同时使用 <code>onLoad</code> 生命周期进行兼容，注意避免重复执行相同逻辑</li><li><em>不依赖页面传参</em>的逻辑<em>可以直接使用 <code>created</code></em> 生命周期替代</li></ul><h4 id="onreachbottom使用注意" tabindex="-1"><code>onReachBottom</code>使用注意 <a class="header-anchor" href="#onreachbottom使用注意" aria-label="Permalink to &quot;\`onReachBottom\`使用注意&quot;">​</a></h4><ul><li>可在<code>pages.json</code>里定义具体<em>页面底部的触发距离</em><a href="https://uniapp.dcloud.io/collocation/pages" target="_blank" rel="noreferrer">onReachBottomDistance</a></li></ul><blockquote><p>设为 50，滚动页面到距离底部 50px 时，就会触发<code>onReachBottom</code>事件。</p></blockquote><ul><li>使用 scroll-view 导致页面没有滚动，则触底事件不会被触发</li></ul><h4 id="onpagescroll-参数说明" tabindex="-1"><code>onPageScroll</code> 参数说明 <a class="header-anchor" href="#onpagescroll-参数说明" aria-label="Permalink to &quot;\`onPageScroll\` 参数说明&quot;">​</a></h4><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>scrollTop</code></td><td>Number</td><td>页面在垂直方向已滚动的距离（单位 px）</td></tr></tbody></table><ul><li><strong>不要写交互复杂的</strong><code>js</code>，比如频繁修改页面。 <ul><li>这个生命周期是在<em>渲染层</em>触发的，在<em>非 h5 端</em>，js 是在<em>逻辑层</em>执行的，两层之间通信是有损耗的。</li><li>滚动中，频发触发两层数据交换，会造成卡顿</li></ul></li><li><strong>滚动时标题栏透明渐变</strong>：在 App 和 H5 下，可在<code>pages.json</code>中配置<code>titleNView</code>下的<code>type</code>为<code>transparent</code><a href="https://uniapp.dcloud.io/collocation/pages?id=app-titlenview" target="_blank" rel="noreferrer">参考</a>。</li><li><strong>滚动吸顶固定某些元素</strong>：推荐 css 的<em>粘性布局</em>，参考<a href="https://ext.dcloud.net.cn/plugin?id=715" target="_blank" rel="noreferrer">插件市场</a>。</li><li>App、微信小程序、H5，可以使用 wxs 监听滚动，<a href="https://uniapp.dcloud.io/frame?id=wxs" target="_blank" rel="noreferrer">参考</a>；</li><li>app-nvue，可以使用 bindingx 监听滚动，<a href="https://uniapp.dcloud.io/nvue-api?id=nvue-%E9%87%8C%E4%BD%BF%E7%94%A8-bindingx" target="_blank" rel="noreferrer">参考</a>。</li><li><code>onBackPress</code>上<strong>不可使用<code>async</code></strong>，会导致无法阻止默认返回</li></ul><h4 id="ontabitemtap-返回的-json-对象说明" tabindex="-1"><code>onTabItemTap</code> 返回的 json 对象说明 <a class="header-anchor" href="#ontabitemtap-返回的-json-对象说明" aria-label="Permalink to &quot;\`onTabItemTap\` 返回的 json 对象说明&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">首页</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pagePath</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pages/index/index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span></code></pre></div><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>index</code></td><td>String</td><td>被点击<code>tabItem</code>的<strong>序号</strong>，<em>从 0 开始</em></td></tr><tr><td><code>pagePath</code></td><td>String</td><td>被点击<code>tabItem</code>的<strong>页面路径</strong></td></tr><tr><td><code>text</code></td><td>String</td><td>被点击<code>tabItem</code>的<strong>按钮文字</strong></td></tr></tbody></table><ul><li><code>onTabItemTap</code>常用于点击当前<code>tabitem</code>，<strong>滚动或刷新当前页面</strong>。点击不同的<code>tabitem</code>，一定会触发页面切换。</li><li><strong>App 端实现点击<code>tabitem</code>不跳转页面</strong>，不能使用<code>onTabItemTap</code>，可以使用<a href="http://www.html5plus.org/doc/zh_cn/nativeobj.html" target="_blank" rel="noreferrer"><code>plus.nativeObj.view</code></a>放一个区块<em>盖住原先的<code>tabitem</code></em>，并拦截点击事件。</li><li>支付宝小程序平台<code>onTabItemTap</code>：表现为<strong>点击非当前 tabitem 后触发</strong>，因此不能用于实现点击返回顶部这种操作</li></ul><h4 id="onnavigationbarbuttontap-参数说明" tabindex="-1"><code>onNavigationBarButtonTap</code> 参数说明 <a class="header-anchor" href="#onnavigationbarbuttontap-参数说明" aria-label="Permalink to &quot;\`onNavigationBarButtonTap\` 参数说明&quot;">​</a></h4><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>index</code></td><td>Number</td><td>原生标题栏<strong>按钮数组的下标</strong></td></tr></tbody></table><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">onNavigationBarButtonTap</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// e的返回格式为json对象：{&quot;text&quot;:&quot;测试&quot;,&quot;index&quot;:0}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="onbackpress-回调参数对象说明" tabindex="-1"><code>onBackPress</code> 回调参数对象说明 <a class="header-anchor" href="#onbackpress-回调参数对象说明" aria-label="Permalink to &quot;\`onBackPress\` 回调参数对象说明&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">backbutton、 navigateBack</span><span style="color:#89DDFF;">}</span></span></code></pre></div><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>from</code></td><td>String</td><td>触发返回行为的来源：<br>&#39;<code>backbutton</code>&#39;：左上角导航栏按钮及安卓返回键；<br>&#39;<code>navigateBack</code>：<code>uni.navigateBack()</code> 方法。<strong>支付宝小程序端不支持返回此字段</strong></td></tr></tbody></table><blockquote><p>支付宝小程序真机可以监听到非<code>navigateBack</code>引发的返回事件（使用小程序开发工具时不会触发<code>onBackPress</code>），不可以阻止默认返回行为</p></blockquote><h3 id="组件生命周期" tabindex="-1">组件生命周期 <a class="header-anchor" href="#组件生命周期" aria-label="Permalink to &quot;组件生命周期&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th><th style="text-align:left;">最低版本</th></tr></thead><tbody><tr><td style="text-align:left;"><code>beforeCreate</code></td><td style="text-align:left;">在<strong>实例初始化</strong>之后被调用。<a href="https://cn.vuejs.org/v2/api/#beforeCreate" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>created</code></td><td style="text-align:left;">在实例<strong>创建完成后</strong>被立即调用。<a href="https://cn.vuejs.org/v2/api/#created" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>beforeMount</code></td><td style="text-align:left;">在<strong>挂载开始之前</strong>被调用。<a href="https://cn.vuejs.org/v2/api/#beforeMount" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>mounted</code></td><td style="text-align:left;"><strong>挂载到实例之后</strong>调用。<a href="https://cn.vuejs.org/v2/api/#mounted" target="_blank" rel="noreferrer">详见</a> 注意：此处并不能确定子组件被全部挂载，如果需要子组件完全挂载之后在执行操作可以使用<code>$nextTick</code><a href="https://cn.vuejs.org/v2/api/#Vue-nextTick" target="_blank" rel="noreferrer">Vue 官方文档</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>beforeUpdate</code></td><td style="text-align:left;"><strong>数据更新</strong>时调用，发生在<strong>虚拟 DOM 打补丁之前</strong>。<a href="https://cn.vuejs.org/v2/api/#beforeUpdate" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;">仅 H5 平台支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>updated</code></td><td style="text-align:left;">由于数据更改导致的<strong>虚拟 DOM 重新渲染和打补丁，在这之后</strong>会调用该钩子。<a href="https://cn.vuejs.org/v2/api/#updated" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;">仅 H5 平台支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>beforeDestroy</code></td><td style="text-align:left;"><strong>实例销毁之前</strong>调用。在这一步，实例仍然完全可用。<a href="https://cn.vuejs.org/v2/api/#beforeDestroy" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>destroyed</code></td><td style="text-align:left;">Vue <strong>实例销毁后</strong>调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。<a href="https://cn.vuejs.org/v2/api/#destroyed" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h2><p><code>uni-app</code>页面路由为框架统一管理，开发者需要在<a href="https://uniapp.dcloud.io/collocation/pages?id=pages" target="_blank" rel="noreferrer">pages.json</a>里配置每个路由页面的路径及页面样式</p><h3 id="路由跳转" tabindex="-1">路由跳转 <a class="header-anchor" href="#路由跳转" aria-label="Permalink to &quot;路由跳转&quot;">​</a></h3><p><code>uni-app</code> 有两种页面路由跳转方式：使用<a href="https://uniapp.dcloud.io/component/navigator" target="_blank" rel="noreferrer">navigator</a>组件跳转、调用<a href="https://uniapp.dcloud.io/api/router" target="_blank" rel="noreferrer">API</a>跳转</p><h3 id="页面栈" tabindex="-1">页面栈 <a class="header-anchor" href="#页面栈" aria-label="Permalink to &quot;页面栈&quot;">​</a></h3><p>框架以栈的形式管理当前所有页面</p><table><thead><tr><th>路由方式</th><th>页面栈表现</th><th>触发时机</th></tr></thead><tbody><tr><td>初始化</td><td>新页面入栈</td><td>uni-app 打开的第一个页面</td></tr><tr><td>打开新页面</td><td>新页面入栈</td><td>API <a href="https://uniapp.dcloud.io/api/router?id=navigateto" target="_blank" rel="noreferrer">uni.navigateTo</a> 、组件<code>&lt;navigator open-type=&quot;navigate&quot;/&gt;</code></td></tr><tr><td>页面重定向</td><td>当前页面出栈，新页面入栈</td><td>API <a href="https://uniapp.dcloud.io/api/router?id=redirectto" target="_blank" rel="noreferrer">uni.redirectTo</a> 、组件<code>&lt;navigator open-type=&quot;redirectTo&quot;/&gt;</code></td></tr><tr><td>页面返回</td><td>页面不断出栈，直到目标返回页</td><td>API <a href="https://uniapp.dcloud.io/api/router?id=navigateback" target="_blank" rel="noreferrer">uni.navigateBack</a> 、组件 <code>&lt;navigator open-type=&quot;navigateBack&quot;/&gt; </code>、用户按左上角返回按钮、安卓用户点击物理 back 按键</td></tr><tr><td>Tab 切换</td><td>页面全部出栈，只留下新的 Tab 页面</td><td>API <a href="https://uniapp.dcloud.io/api/router?id=switchtab" target="_blank" rel="noreferrer">uni.switchTab</a> 、组件<code>&lt;navigator open-type=&quot;switchTab&quot;/&gt;</code>、用户切换 Tab</td></tr><tr><td>重加载</td><td>页面全部出栈，只留下新的页面</td><td>API <a href="https://uniapp.dcloud.io/api/router?id=relaunch" target="_blank" rel="noreferrer">uni.reLaunch</a> 、组件<code> &lt;navigator open-type=&quot;reLaunch&quot;/&gt;</code></td></tr></tbody></table><h2 id="运行环境判断" tabindex="-1">运行环境判断 <a class="header-anchor" href="#运行环境判断" aria-label="Permalink to &quot;运行环境判断&quot;">​</a></h2><h3 id="开发环境和生产环境" tabindex="-1">开发环境和生产环境 <a class="header-anchor" href="#开发环境和生产环境" aria-label="Permalink to &quot;开发环境和生产环境&quot;">​</a></h3><p><code>uni-app</code> 可通过 <code>p<wbr>rocess.env.NODE_ENV</code> 判断当前环境是开发环境还是生产环境。</p><ul><li>单一平台配置，可以 <a href="https://uniapp.dcloud.io/collocation/package" target="_blank" rel="noreferrer">package.json</a> 中配置</li><li>所有平台配置，可以在 <a href="https://uniapp.dcloud.io/collocation/vue-config" target="_blank" rel="noreferrer">vue-config.js</a> 中配置</li></ul><h3 id="判断平台" tabindex="-1">判断平台 <a class="header-anchor" href="#判断平台" aria-label="Permalink to &quot;判断平台&quot;">​</a></h3><p><strong>编译期判断</strong>，即条件编译：<strong>不同平台</strong>在编译出包后已经是<strong>不同代码</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// #ifdef H5</span></span>
<span class="line"><span style="color:#82AAFF;">alert</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">只有h5平台才有alert方法</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// #endif</span></span></code></pre></div><p><strong>运行期判断</strong>，代码已入包中，仍然需要在<strong>运行期判断平台</strong></p><blockquote><p>小程序开发工具返回值均为 <code>devtools</code></p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#A6ACCD;"> (uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSystemInfoSync</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">platform) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">android</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">运行Android上</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ios</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">运行iOS上</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">运行在开发者工具上</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="页面样式与布局" tabindex="-1">页面样式与布局 <a class="header-anchor" href="#页面样式与布局" aria-label="Permalink to &quot;页面样式与布局&quot;">​</a></h2><h3 id="尺寸单位" tabindex="-1">尺寸单位 <a class="header-anchor" href="#尺寸单位" aria-label="Permalink to &quot;尺寸单位&quot;">​</a></h3><p><code>uni-app</code> 支持的通用 css 单位包括 <code>px</code>、<code>rpx</code></p><ul><li><code>px</code> 即屏幕像素</li><li><code>rpx</code> 即响应式<code>px</code>，一种根据屏幕宽度自适应的动态单位。以 750 宽的屏幕为基准，750rpx 恰好为屏幕宽度。</li></ul><p><strong><code>vue</code>支持，<code>nvue</code>不支持</strong></p><ul><li><code>rem</code> 根字体大小可以通过 <a href="https://uniapp.dcloud.io/component/page-meta?id=page-meta" target="_blank" rel="noreferrer">page-meta</a> 配置</li><li><code>vh</code> viewpoint height，视窗高度，1vh 等于视窗高度的 1%</li><li><code>vw</code> viewpoint width，视窗宽度，1vw 等于视窗宽度的 1%</li><li><code>% </code> nvue 不支持百分比单位。</li></ul><p><strong>App 端</strong>，在 <code>pages.json</code> 里只支持 <code>px</code>。<strong>注意此时不支持 <code>rpx</code></strong></p><p><code>设计稿 1px / 设计稿基准宽度 = 框架样式 1rpx / 750rpx</code></p><p><code>最终值 = ( 750 * 1px / 设计稿基准宽度 ) rpx</code></p><blockquote><p><code>uni-app</code> 规定屏幕基准宽度 750rpx</p></blockquote><ul><li><code>rpx</code>不支持动态<strong>横竖屏切换计算</strong>，使用<code>rpx</code>建议锁定屏幕方向</li></ul><h3 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h3><p>框架组件上支持使用 <code>style</code>、<code>class</code> 属性来控制组件的样式</p><ul><li><code>style</code>：静态的样式<strong>统一写到 <code>class</code></strong> 。style 接收动态的样式，在<strong>运行时会进行解析</strong>，请尽量<strong>避免将静态的样式写进 <code>style</code></strong> 中，以免影响渲染速度。</li><li><code>class</code>：用于指定样式规则。</li></ul><p><em>Tips</em></p><ul><li>在 <code>uni-app</code> 中不能使用 <code>*</code> 选择器</li><li>微信小程序自定义组件中<em>仅支持 <code>class</code> 选择器</em></li><li><code>page</code> 相当于 <code>body</code> 节点</li></ul><h3 id="css-变量" tabindex="-1">CSS 变量 <a class="header-anchor" href="#css-变量" aria-label="Permalink to &quot;CSS 变量&quot;">​</a></h3><p>uni-app 提供内置 CSS 变量</p><table><thead><tr><th style="text-align:left;">CSS 变量</th><th style="text-align:left;">描述</th><th style="text-align:left;">App</th><th style="text-align:left;">小程序</th><th style="text-align:left;">H5</th></tr></thead><tbody><tr><td style="text-align:left;"><code>--status-bar-height</code></td><td style="text-align:left;">系统<strong>状态栏</strong>高度</td><td style="text-align:left;"><a href="http://www.html5plus.org/doc/zh_cn/navigator.html#plus.navigator.getStatusbarHeight" target="_blank" rel="noreferrer">系统状态栏高度</a>、nvue 注意见下</td><td style="text-align:left;">25px</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;"><code>--window-top</code></td><td style="text-align:left;"><strong>内容区域距离<em>顶</em>部</strong>的距离</td><td style="text-align:left;">0</td><td style="text-align:left;">0</td><td style="text-align:left;">NavigationBar 的高度</td></tr><tr><td style="text-align:left;"><code>--window-bottom</code></td><td style="text-align:left;"><strong>内容区域距离<em>底</em>部</strong>的距离</td><td style="text-align:left;">0</td><td style="text-align:left;">0</td><td style="text-align:left;">TabBar 的高度</td></tr></tbody></table><p><em>Tips</em></p><ul><li><code>var(--status-bar-height)</code><ul><li>微信小程序环境： <code>25px</code></li><li>App ：手机实际状态栏高度</li></ul></li><li>设置 <code>&quot;navigationStyle&quot;:&quot;custom&quot;</code> 取消原生导航栏后，由于窗体为沉浸式，占据了状态栏位置 <ul><li>使用一个高度为 <code>var(--status-bar-height)</code> 的 view 放在页面<strong>顶部</strong>，避免页面内容出现在状态栏</li></ul></li><li>H5 端，不存在<em>原生导航栏</em>和*<code>tabbar</code>*，如果设置了一个固定位置的居底 view，在小程序和 App 端是在 tabbar 上方，但在 H5 端会与 tabbar 重叠。 <ul><li>使用<code>--window-bottom</code>，不管在哪个端，都是固定在<code>tabbar</code>上方</li></ul></li><li>目前 nvue 在 App 端，还不支持 <code>--status-bar-height</code>变量 <ul><li>替代方案：页面<code>onLoad</code>时通过<code>uni.getSystemInfoSync().statusBarHeight</code>获取状态栏高度，然后通过 style 绑定方式给占位 view 设定高度</li></ul></li></ul><h3 id="固定值" tabindex="-1">固定值 <a class="header-anchor" href="#固定值" aria-label="Permalink to &quot;固定值&quot;">​</a></h3><p><code>uni-app</code> 中以下组件的高度是固定的，不可修改</p><table><thead><tr><th style="text-align:left;">组件</th><th style="text-align:left;">描述</th><th style="text-align:left;">App</th><th style="text-align:left;">H5</th></tr></thead><tbody><tr><td style="text-align:left;"><code>NavigationBar</code></td><td style="text-align:left;">导航栏</td><td style="text-align:left;"><code>44px</code></td><td style="text-align:left;"><code>44px</code></td></tr><tr><td style="text-align:left;"><code>TabBar</code></td><td style="text-align:left;">底部选项卡</td><td style="text-align:left;">*2.3.4+*之前 <code>56px</code>，<em>2.3.4+</em> <code>50px</code>。可自主更改</td><td style="text-align:left;"><code>50px</code></td></tr></tbody></table><h3 id="背景图片" tabindex="-1">背景图片 <a class="header-anchor" href="#背景图片" aria-label="Permalink to &quot;背景图片&quot;">​</a></h3><p><code>uni-app</code> 支持使用在 css 里设置背景图片</p><ul><li><p>支持 base64 格式图片</p></li><li><p>支持网络路径图片</p></li><li><p>小程序不支持在 css 中使用本地文件（背景，字体）</p><ul><li>以<code>base64</code>方式方可使用</li><li>App 端在**<code>v3</code>模式以后**，才支持本地文件</li></ul></li><li><p>使用本地路径背景图片需注意</p><ul><li><code>&lt;40kb</code> 时，<code>uni-app</code> 编译到不支持本地背景图的平台时，会自动将其转化为 base64 格式</li><li><code>&gt;= 40kb</code>，会有性能问题。可以将其转换为 base64 格式使用，或将其挪到服务器上，从网络地址引用</li><li>本地背景图片的引用路径推荐使用以 <code>~@</code> 开头的绝对路径。</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">test2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">~@/static/logo.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ul><blockquote><p>微信小程序<strong>不支持相对路径</strong>（真机不支持，开发工具支持）</p></blockquote><h3 id="字体图标" tabindex="-1">字体图标 <a class="header-anchor" href="#字体图标" aria-label="Permalink to &quot;字体图标&quot;">​</a></h3><p><code>uni-app</code> 支持使用字体图标</p><ul><li>支持 base64 格式字体图标</li><li>支持网络路径字体图标</li><li>小程序不支持，<strong>同上</strong></li><li><strong>网络路径</strong>：必须加协议头 <code>https</code></li><li>从 <a href="http://www.iconfont.cn" target="_blank" rel="noreferrer">http://www.iconfont.cn</a> 上拷贝的代码，<strong>默认是没加协议头</strong></li><li>使用本地路径图标字体需注意：<strong>同上</strong></li></ul><h2 id="template-block" tabindex="-1"><code>&lt;template/&gt;</code> <code>&lt;block/&gt;</code> <a class="header-anchor" href="#template-block" aria-label="Permalink to &quot;\`&lt;template/&gt;\` \`&lt;block/&gt;\`&quot;">​</a></h2><p><code>uni-app</code> 支持在 template 模板中嵌套 <code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code>，用来进行 <em>列表渲染</em> 和 <em>条件渲染</em></p><blockquote><p><code>block</code> 不同平台表现不一，推荐<code>template</code></p></blockquote><h2 id="npm-支持" tabindex="-1">npm 支持 <a class="header-anchor" href="#npm-支持" aria-label="Permalink to &quot;npm 支持&quot;">​</a></h2><ul><li>直接从 <code>npm</code> 下载库很容易只兼容 H5 端</li><li>非 H5 端不支持使用含有 <code>dom</code>、<code>window</code> 等操作的 <code>vue</code> 组件和 <code>js</code> 模块</li><li><code>node_modules</code> 目录必须在项目根目录下</li></ul>`,102),n=[o];function p(r,c,d,i,y,g){return a(),e("div",null,n)}const D=t(s,[["render",p]]);export{u as __pageData,D as default};
