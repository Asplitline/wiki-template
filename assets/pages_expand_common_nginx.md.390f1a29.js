import{_ as a,c as e,o as i,Q as l}from"./chunks/framework.8adc4ca2.js";const b=JSON.parse('{"title":"nginx","description":"","frontmatter":{"title":"nginx","order":1},"headers":[],"relativePath":"pages/expand/common/nginx.md","lastUpdated":1681395124000}'),t={name:"pages/expand/common/nginx.md"},r=l('<h1 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;nginx&quot;">​</a></h1><h2 id="nginx-简介" tabindex="-1">Nginx 简介 <a class="header-anchor" href="#nginx-简介" aria-label="Permalink to &quot;Nginx 简介&quot;">​</a></h2><p>轻量级高并发服务器</p><ul><li>基于事件驱动架构，使得其可以支持数以百万级别的 TCP 连接。</li><li>高度的模块化和自由软件许可证，使得第三方模块层出不穷。</li><li>跨平台服务器，可以运行在 Linux、Windows、FreeBSD、Solaris、AIX、Mac OS 等操作系统</li></ul><h2 id="关于代理" tabindex="-1">关于代理 <a class="header-anchor" href="#关于代理" aria-label="Permalink to &quot;关于代理&quot;">​</a></h2><p>代理：代表、渠道 客人到 Nike 专卖店买了一双鞋，这个专卖店就是代理，被代理角色就是 Nike 厂家，目标角色就是用户</p><h3 id="正向代理" tabindex="-1">正向代理 <a class="header-anchor" href="#正向代理" aria-label="Permalink to &quot;正向代理&quot;">​</a></h3><p>访问目标地址，配置代理服务器后，代理服务器帮助访问后返回。</p><ul><li>代理的客户端，隐藏了客户端信息</li></ul><h4 id="经典例子-翻墙" tabindex="-1">经典例子：翻墙 <a class="header-anchor" href="#经典例子-翻墙" aria-label="Permalink to &quot;经典例子：翻墙&quot;">​</a></h4><ol><li>找到可以访问国外网站的代理服务器</li><li>请求发送给代理服务器</li><li>代理服务器返回数据</li></ol><h4 id="正向代理特点" tabindex="-1">正向代理特点 <a class="header-anchor" href="#正向代理特点" aria-label="Permalink to &quot;正向代理特点&quot;">​</a></h4><ul><li>来源未知 - 不知道请求来自于哪个客户端</li><li>明确去处 - 知道访问的服务器</li><li>需手动配置代理服务器</li></ul><h4 id="正向代理用途" tabindex="-1">正向代理用途 <a class="header-anchor" href="#正向代理用途" aria-label="Permalink to &quot;正向代理用途&quot;">​</a></h4><ul><li>访问原来无法访问的资源，如 Google。</li><li>做缓存，加速访问资源。</li><li>对客户端访问授权，上网进行认证。</li><li>代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息。</li></ul><h3 id="反向代理" tabindex="-1">反向代理 <a class="header-anchor" href="#反向代理" aria-label="Permalink to &quot;反向代理&quot;">​</a></h3><p>向代理服务器（目标地址）发送请求， 代理服务器从真实服务器获取后返回。</p><ul><li>误以为 代理服务器是目标地址</li><li>代理的服务器，隐藏了服务器信息</li></ul><h4 id="经典例子-分布式服务器" tabindex="-1">经典例子：分布式服务器 <a class="header-anchor" href="#经典例子-分布式服务器" aria-label="Permalink to &quot;经典例子：分布式服务器&quot;">​</a></h4><p>海量的请求，单个服务器无法满足。 可以通过反向代理，将请求分发给不同服务器。</p><h4 id="反向代理特点" tabindex="-1">反向代理特点 <a class="header-anchor" href="#反向代理特点" aria-label="Permalink to &quot;反向代理特点&quot;">​</a></h4><p>明确来源 - 知道请求来自哪个客户端 去除未知 - 不知道哪个服务器处理</p><h4 id="反向代理用途" tabindex="-1">反向代理用途 <a class="header-anchor" href="#反向代理用途" aria-label="Permalink to &quot;反向代理用途&quot;">​</a></h4><ul><li>保证内网安全，反向代理服务器作为公网，代理内网服务器</li><li>负载均衡，分发请求</li><li>前端跨域问题</li></ul><h3 id="正向代理和反向代理区别" tabindex="-1">正向代理和反向代理区别 <a class="header-anchor" href="#正向代理和反向代理区别" aria-label="Permalink to &quot;正向代理和反向代理区别&quot;">​</a></h3><p>本质上都是替服务器收发请求 <img src="https://cdn.nlark.com/yuque/0/2022/png/2621802/1649863755580-a8d2c287-9c22-41f4-8275-771f2321c1ea.png#clientId=udd7d0b77-b392-4&amp;crop=0.1026&amp;crop=0&amp;crop=0.9179&amp;crop=1&amp;from=paste&amp;height=460&amp;id=Gf70U&amp;margin=%5Bobject%20Object%5D&amp;originHeight=621&amp;originWidth=590&amp;originalType=url&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=uced2b983-d005-4ef0-9c83-bb51e009fa0&amp;title=&amp;width=437" alt=""></p><ul><li>在正向代理中，Proxy 和 Client 同属于一个 LAN（图中方框内），隐藏了客户端信息。</li><li>在反向代理中，Proxy 和 Server 同属于一个 LAN（图中方框内），隐藏了服务端信息。</li></ul><h3 id="正向代理和反向代理同共存" tabindex="-1">正向代理和反向代理同共存 <a class="header-anchor" href="#正向代理和反向代理同共存" aria-label="Permalink to &quot;正向代理和反向代理同共存&quot;">​</a></h3><p>正向代理和反向代理很有可能会存在同一个应用场景中，正向代理代理客户端的请求去访问目标服务器，目标服务器是一个反向单利服务器，反向代理了多台真实的业务处理服务器。</p><h3 id="前端配置-proxy-的理解" tabindex="-1">前端配置 proxy 的理解 <a class="header-anchor" href="#前端配置-proxy-的理解" aria-label="Permalink to &quot;前端配置 proxy 的理解&quot;">​</a></h3><p>项目启动，跑起 本地服务器 localhost:8080 通过 proxy 配置 target 为 47.47.47.47:4545</p><p>正向代理还是反向代理 =&gt; 反向代理</p><ul><li>localhost:8080 =&gt; 为代理服务器</li><li>所有请求都是向代理服务器请求，再由代理服务器转向帧则的服务器</li><li>服务器不可见，代理的服务器</li></ul><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><p>正向代理反向代理详解：<a href="https://www.cnblogs.com/wcwnina/p/8728391.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/wcwnina/p/8728391.html</a></p><p>理解前端代理：<a href="https://juejin.cn/post/6844904033874886663" target="_blank" rel="noreferrer">https://juejin.cn/post/6844904033874886663</a></p>',36),o=[r];function n(h,p,c,d,s,u){return i(),e("div",null,o)}const x=a(t,[["render",n]]);export{b as __pageData,x as default};
