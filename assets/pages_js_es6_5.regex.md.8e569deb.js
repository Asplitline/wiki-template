import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.8adc4ca2.js";const A=JSON.parse('{"title":"正则扩展","description":"","frontmatter":{"title":"正则扩展","order":5},"headers":[],"relativePath":"pages/js/es6/5.regex.md","lastUpdated":1681395124000}'),o={name:"pages/js/es6/5.regex.md"},p=l(`<h1 id="正则扩展" tabindex="-1">正则扩展 <a class="header-anchor" href="#正则扩展" aria-label="Permalink to &quot;正则扩展&quot;">​</a></h1><h2 id="regexp-构造函数" tabindex="-1">RegExp 构造函数 <a class="header-anchor" href="#regexp-构造函数" aria-label="Permalink to &quot;RegExp 构造函数&quot;">​</a></h2><p>ES5 - RegExp 有两种形式构造参数</p><p>字符串 + 修饰符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xyz</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等价于</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">xyz</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span></span></code></pre></div><p>正则表达式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">xyz</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等价于</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">xyz</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span></span></code></pre></div><p>ES6 - 引入第三种情况，正则表达式 + 修饰符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">gi</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">regex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">flags </span><span style="color:#676E95;font-style:italic;">// i</span></span></code></pre></div><blockquote><p><code>flag</code>会覆盖原有修饰符</p></blockquote><h2 id="字符串正则方法" tabindex="-1">字符串正则方法 <a class="header-anchor" href="#字符串正则方法" aria-label="Permalink to &quot;字符串正则方法&quot;">​</a></h2><p>ES5 - <code>match()</code>、<code>replace()</code>、<code>search()</code>、<code>split()</code></p><p>ES6 - 将 String 对象方法关联到 RegExp 对象</p><ul><li><code>String.prototype.match</code> 调用 <code>RegExp.prototype[Symbol.match]</code></li><li><code>String.prototype.replace</code> 调用 <code>RegExp.prototype[Symbol.replace]</code></li><li><code>String.prototype.search</code> 调用 <code>RegExp.prototype[Symbol.search]</code></li><li><code>String.prototype.split</code> 调用 <code>RegExp.prototype[Symbol.split]</code></li></ul><p><em>ES2020</em> - <code>String.prototype.matchAll()</code>：一次性取出所有匹配。</p><p>返回值：遍历器（Iterator），而不是数组。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test1test2test3</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">t</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">e</span><span style="color:#89DDFF;">)(</span><span style="color:#C3E88D;">st</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">?))/</span><span style="color:#F78C6C;">g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> match </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">matchAll</span><span style="color:#A6ACCD;">(regex)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [&quot;test1&quot;, &quot;e&quot;, &quot;st1&quot;, &quot;1&quot;, index: 0, input: &quot;test1test2test3&quot;]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [&quot;test2&quot;, &quot;e&quot;, &quot;st2&quot;, &quot;2&quot;, index: 5, input: &quot;test1test2test3&quot;]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [&quot;test3&quot;, &quot;e&quot;, &quot;st3&quot;, &quot;3&quot;, index: 10, input: &quot;test1test2test3&quot;]</span></span></code></pre></div><h2 id="u-修饰符" tabindex="-1"><a href="https://wangdoc.com/es6/regex.html#u-%E4%BF%AE%E9%A5%B0%E7%AC%A6" target="_blank" rel="noreferrer">u 修饰符</a> <a class="header-anchor" href="#u-修饰符" aria-label="Permalink to &quot;[u 修饰符](https://wangdoc.com/es6/regex.html#u-%E4%BF%AE%E9%A5%B0%E7%AC%A6)&quot;">​</a></h2><p><code>u</code>修饰符：用来正确处理大于<code>\\uFFFF</code>的 Unicode 字符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">\\uD83D</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">u</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\uD83D\\uDC2A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">\\uD83D</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\uD83D\\uDC2A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><h2 id="y-修饰符" tabindex="-1">y 修饰符 <a class="header-anchor" href="#y-修饰符" aria-label="Permalink to &quot;y 修饰符&quot;">​</a></h2><p>y 修饰符（粘连修饰符）：全局匹配中后一次匹配都从上一次匹配成功的下一个位置开始。</p><blockquote><p>g 修饰符 在剩余位置中取</p></blockquote><p><code>lastIndex</code>属性：每次搜索开始位置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aaa_aa_a</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> r1 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">+/</span><span style="color:#F78C6C;">g</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> r2 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">+/</span><span style="color:#F78C6C;">y</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">r1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(s) </span><span style="color:#676E95;font-style:italic;">// [&quot;aaa&quot;] r1.lastIndex = 0</span></span>
<span class="line"><span style="color:#A6ACCD;">r1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(s) </span><span style="color:#676E95;font-style:italic;">// [&quot;aa&quot;] r1.lastIndex = 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">r2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(s) </span><span style="color:#676E95;font-style:italic;">// [&quot;aaa&quot;] r2.lastIndex = 0</span></span>
<span class="line"><span style="color:#A6ACCD;">r2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(s) </span><span style="color:#676E95;font-style:italic;">// null r2.lastIndex = 3</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> REGEX </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">gy</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aaxa</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(REGEX</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;--xa&#39;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a1a2a3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">a\\d</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">y</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;a1&quot;]</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a1a2a3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">a\\d</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">gy</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;a1&quot;, &quot;a2&quot;, &quot;a3&quot;]</span></span></code></pre></div><blockquote><p>==@DIF== - <code>y</code> 不会忽略非法字符</p></blockquote><h2 id="s-修饰符-dotall-模式" tabindex="-1"><a href="https://wangdoc.com/es6/regex.html#s-%E4%BF%AE%E9%A5%B0%E7%AC%A6%EF%BC%9Adotall-%E6%A8%A1%E5%BC%8F" target="_blank" rel="noreferrer">s 修饰符：dotAll 模式</a> <a class="header-anchor" href="#s-修饰符-dotall-模式" aria-label="Permalink to &quot;[s 修饰符：dotAll 模式](https://wangdoc.com/es6/regex.html#s-%E4%BF%AE%E9%A5%B0%E7%AC%A6%EF%BC%9Adotall-%E6%A8%A1%E5%BC%8F)&quot;">​</a></h2><p><code>·</code>：代表任意单个字符。存在两个例外</p><ol><li>UTF-16 字符</li><li>行终止符，如下</li></ol><ul><li>U+000A 换行符（<code>\\n</code>）</li><li>U+000D 回车符（<code>\\r</code>）</li><li>U+2028 行分隔符（line separator</li><li>U+2029 段分隔符（paragraph separator）</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">foo.bar</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">[^]</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><p>ES2018 - <code>s</code>修饰符：使得<code>.</code>可以匹配任意单个字符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// es2018</span></span>
<span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">foo.bar</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><p>这被称为<code>dotAll</code>模式，即点（dot）代表一切字符。</p><p><code>dotAll</code>属性：正则表达式是否处在<code>dotAll</code>模式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> re </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">foo.bar</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">s</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 另一种写法</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// const re = new RegExp(&#39;foo.bar&#39;, &#39;s&#39;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">re</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">re</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dotAll </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">re</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">flags </span><span style="color:#676E95;font-style:italic;">// &#39;s&#39;</span></span></code></pre></div><h2 id="regexp-prototype-unicode-属性" tabindex="-1">RegExp.prototype.unicode 属性 <a class="header-anchor" href="#regexp-prototype-unicode-属性" aria-label="Permalink to &quot;RegExp.prototype.unicode 属性&quot;">​</a></h2><p><code>unicode</code>属性：表示是否设置了<code>u</code>修饰符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> r1 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> r2 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">u</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">r1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">unicode </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">r2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">unicode </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><h2 id="regexp-prototype-sticky-属性" tabindex="-1">RegExp.prototype.sticky 属性 <a class="header-anchor" href="#regexp-prototype-sticky-属性" aria-label="Permalink to &quot;RegExp.prototype.sticky 属性&quot;">​</a></h2><p><code>sticky</code>属性：表示是否设置了<code>y</code>修饰符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">hello\\d</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">y</span></span>
<span class="line"><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sticky </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><h2 id="regexp-prototype-flags-属性" tabindex="-1">RegExp.prototype.flags 属性 <a class="header-anchor" href="#regexp-prototype-flags-属性" aria-label="Permalink to &quot;RegExp.prototype.flags 属性&quot;">​</a></h2><p><code>flags</code>属性：会返回正则表达式的修饰符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ES5 的 source 属性</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 返回正则表达式的正文</span></span>
<span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">gi</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">source </span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// &quot;abc&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ES6 的 flags 属性</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 返回正则表达式的修饰符</span></span>
<span class="line"><span style="color:#A6ACCD;">  abc </span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#A6ACCD;">  ig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">flags</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;gi&#39;</span></span></code></pre></div><h2 id="先行断言和后行断言" tabindex="-1">先行断言和后行断言 <a class="header-anchor" href="#先行断言和后行断言" aria-label="Permalink to &quot;先行断言和后行断言&quot;">​</a></h2><p>先行断言 ：<code>x</code>只有在<code>y</code>前面才匹配，必须写成<code>/x(?=y)/</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+(?=</span><span style="color:#C3E88D;">%</span><span style="color:#89DDFF;">)/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">100% of US presidents have been male</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;100&quot;]</span></span></code></pre></div><p>先行否定断言：<code>x</code>只有不在<code>y </code>前面才匹配，必须写成<code>/x(?!y)/</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+(?!</span><span style="color:#C3E88D;">%</span><span style="color:#89DDFF;">)/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">that’s all 44 of them</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;44&quot;]</span></span></code></pre></div><p>ES2018 - 引入</p><p>后行断言：<code>x</code>只有在<code>y</code>后面才匹配，必须写成<code>/(?&lt;=y)x/</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/(?&lt;=</span><span style="color:#A6ACCD;">\\$</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Benjamin Franklin is on the $100 bill</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;100&quot;]</span></span></code></pre></div><p>后行否定断言 ：<code>x</code>只有不在<code>y</code>后面才匹配，必须写成<code>/(?&lt;!y)x/</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/(?&lt;!</span><span style="color:#A6ACCD;">\\$</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">it’s is worth about €90</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;90&quot;]</span></span></code></pre></div><p>后行断言组匹配：先匹配<code>/(?&lt;=y)x/</code>的<code>x</code>，然后再回到左边，匹配<code>y</code>的部分，<strong>先右再左</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 匹配在(\\d+)(\\d+)后面的串，第2个(\\d+)先贪婪匹配</span></span>
<span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/(?&lt;=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+))</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1053</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;&quot;, &quot;1&quot;, &quot;053&quot;]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 第1个(\\d+)先贪婪匹配</span></span>
<span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1053</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;1053&quot;, &quot;105&quot;, &quot;3&quot;]</span></span></code></pre></div><p>上面第一个匹配项都是贪婪匹配，053 和 105 ，只是顺序不同</p><p>补充：<code>/(?&lt;=(\\d+)(\\d+))$/</code> - 整个表达式都为断言，所以未匹配到串</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/(?&lt;=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+))</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1053</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;1&quot;, &quot;0&quot;, &quot;53&quot;]</span></span></code></pre></div><p><em>反斜杠引用</em>，<strong>也</strong>与通常的顺序<strong>相反</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/(?&lt;=(</span><span style="color:#C3E88D;">o</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">d</span><span style="color:#F78C6C;">\\1</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">r</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hodor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// null</span></span>
<span class="line"><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">/(?&lt;=</span><span style="color:#F78C6C;">\\1</span><span style="color:#C3E88D;">d</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">o</span><span style="color:#89DDFF;">))</span><span style="color:#C3E88D;">r</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hodor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// [&quot;r&quot;, &quot;o&quot;]</span></span></code></pre></div><p>补充：\\1 表示 第一个捕获值。后行断言从右往左，第一行代码，\\1 在 (\\d) 之前（捕获值在 捕获之前），所以无法匹配。</p><h2 id="unicode-属性类" tabindex="-1"><a href="https://wangdoc.com/es6/regex.html#unicode-%E5%B1%9E%E6%80%A7%E7%B1%BB" target="_blank" rel="noreferrer">Unicode 属性类</a> <a class="header-anchor" href="#unicode-属性类" aria-label="Permalink to &quot;[Unicode 属性类](https://wangdoc.com/es6/regex.html#unicode-%E5%B1%9E%E6%80%A7%E7%B1%BB)&quot;">​</a></h2><h2 id="具名组匹配" tabindex="-1">具名组匹配 <a class="header-anchor" href="#具名组匹配" aria-label="Permalink to &quot;具名组匹配&quot;">​</a></h2><p>使用圆括号进行组匹配</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> RE_DATE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{4})</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> matchObj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> RE_DATE</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1999-12-31</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> year </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> matchObj[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#676E95;font-style:italic;">// 1999</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> month </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> matchObj[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">] </span><span style="color:#676E95;font-style:italic;">// 12</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> day </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> matchObj[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">] </span><span style="color:#676E95;font-style:italic;">// 31</span></span></code></pre></div><p>ES2018 - 具名组匹配</p><p>语法：<code>?&lt;组名&gt;</code></p><p>为每一组匹配指定一个名称，未匹配值为<code>undefined</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> RE_DATE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?&lt;</span><span style="color:#A6ACCD;">year</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{4})</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(?&lt;</span><span style="color:#A6ACCD;">month</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(?&lt;</span><span style="color:#A6ACCD;">day</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> matchObj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> RE_DATE</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1999-12-31</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> year </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> matchObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">groups</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">year </span><span style="color:#676E95;font-style:italic;">// &quot;1999&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> month </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> matchObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">groups</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">month </span><span style="color:#676E95;font-style:italic;">// &quot;12&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> day </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> matchObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">groups</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">day </span><span style="color:#676E95;font-style:italic;">// &quot;31&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// const {groups: {year, month}} = RE_DATE.exec(&#39;1999-12-31&#39;);</span></span></code></pre></div><p>引用组名</p><p>语法：<code>$&lt;组名&gt;</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> re </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?&lt;</span><span style="color:#A6ACCD;">year</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{4})</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(?&lt;</span><span style="color:#A6ACCD;">month</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(?&lt;</span><span style="color:#A6ACCD;">day</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})/</span><span style="color:#F78C6C;">u</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// params#2 String</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2015-01-02</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(re</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$&lt;day&gt;/$&lt;month&gt;/$&lt;year&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;02/01/2015&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// params#2 Function</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2015-01-02</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  re</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  (</span></span>
<span class="line"><span style="color:#A6ACCD;">    matched</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 整个匹配结果 2015-01-02</span></span>
<span class="line"><span style="color:#A6ACCD;">    capture1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 第一个组匹配 2015</span></span>
<span class="line"><span style="color:#A6ACCD;">    capture2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 第二个组匹配 01</span></span>
<span class="line"><span style="color:#A6ACCD;">    capture3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 第三个组匹配 02</span></span>
<span class="line"><span style="color:#A6ACCD;">    position</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 匹配开始的位置 0</span></span>
<span class="line"><span style="color:#A6ACCD;">    S</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 原字符串 2015-01-02</span></span>
<span class="line"><span style="color:#A6ACCD;">    groups </span><span style="color:#676E95;font-style:italic;">// 具名组构成的一个对象 {year, month, day}</span></span>
<span class="line"><span style="color:#A6ACCD;">  ) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">day</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">month</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">year</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">groups</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">day</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">month</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">year</span><span style="color:#89DDFF;">}\`</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>内部应用</p><p>语法：<code>k&lt;组名&gt;</code></p><p>正则表达式内部引用，也可以用 <code>\\1</code>进行捕获</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> RE_TWICE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(?&lt;</span><span style="color:#A6ACCD;">word</span><span style="color:#89DDFF;">&gt;[</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">]+)</span><span style="color:#C3E88D;">!</span><span style="color:#F78C6C;">\\k&lt;</span><span style="color:#A6ACCD;">word</span><span style="color:#F78C6C;">&gt;</span><span style="color:#C3E88D;">!</span><span style="color:#F78C6C;">\\1</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#A6ACCD;">RE_TWICE</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc!abc!abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">RE_TWICE</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc!abc!ab</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span></code></pre></div><h2 id="正则匹配索引" tabindex="-1">正则匹配索引 <a class="header-anchor" href="#正则匹配索引" aria-label="Permalink to &quot;正则匹配索引&quot;">​</a></h2><p><code>exec()</code>返回 index 属性：获取整个匹配结果开始位置。</p><p>问题：包含组匹配，无法拿到每个组的开始位置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> text </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">zabbcdef</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> re </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">+(</span><span style="color:#C3E88D;">cd</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">ef</span><span style="color:#89DDFF;">))/</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> re</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(text)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">index </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">indices </span><span style="color:#676E95;font-style:italic;">// [ [1, 8], [4, 8], [6, 8] ]</span></span></code></pre></div><p>具名匹配：indices 会包含 groups 属性</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> text </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">zabbcdef</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> re </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">+(?&lt;</span><span style="color:#A6ACCD;">Z</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">cd</span><span style="color:#89DDFF;">)/</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> re</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(text)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">indices</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">groups </span><span style="color:#676E95;font-style:italic;">// { Z: [ 4, 6 ] }</span></span></code></pre></div><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><p><a href="https://wangdoc.com/es6/regex.html" target="_blank" rel="noreferrer">[-] 正则扩展</a></p>`,88),e=[p];function t(c,r,y,D,F,C){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
