import{_ as t,c as s,o as e,Q as l}from"./chunks/framework.8adc4ca2.js";const F=JSON.parse('{"title":"通用Api","description":"","frontmatter":{"title":"通用Api","order":3},"headers":[],"relativePath":"pages/uniapp/base/api.md","lastUpdated":1681395124000}'),a={name:"pages/uniapp/base/api.md"},n=l(`<h1 id="网络" tabindex="-1">网络 <a class="header-anchor" href="#网络" aria-label="Permalink to &quot;网络&quot;">​</a></h1><h2 id="uni-request-object" tabindex="-1">uni.request(object) <a class="header-anchor" href="#uni-request-object" aria-label="Permalink to &quot;uni.request(object)&quot;">​</a></h2><p>发起网络请求</p><h3 id="object-对象说明" tabindex="-1">object 对象说明 <a class="header-anchor" href="#object-对象说明" aria-label="Permalink to &quot;object 对象说明&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">开发者服务器<strong>接口地址</strong></td></tr><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>请求参数</strong></td></tr><tr><td style="text-align:left;"><code>header</code></td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>请求 <code>header</code></strong>，header 中不能设置 Referer</td></tr><tr><td style="text-align:left;"><code>method</code></td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>请求类型</strong>，必须<strong>大写</strong></td></tr><tr><td style="text-align:left;"><code>timeout</code></td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>超时时间</strong>，单位 <code>ms</code></td></tr><tr><td style="text-align:left;"><code>dataType</code></td><td style="text-align:left;">否</td><td style="text-align:left;">默认为 <em>json</em>：会对返回的数据做一次 <code>JSON.parse</code></td></tr><tr><td style="text-align:left;"><code>responseType</code></td><td style="text-align:left;">否</td><td style="text-align:left;">设置<strong>响应数据类型</strong>。合法值：text、arraybuffer</td></tr><tr><td style="text-align:left;"><code>sslVerify</code></td><td style="text-align:left;">否</td><td style="text-align:left;">验证 <code>ssl</code> 证书</td></tr><tr><td style="text-align:left;"><code>withCredentials</code></td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>跨域</strong>请求时<strong>是否携带凭证</strong>（cookies）</td></tr><tr><td style="text-align:left;"><code>firstIpv4</code></td><td style="text-align:left;">否</td><td style="text-align:left;">DNS 解析时优先使用<code>ipv4</code></td></tr><tr><td style="text-align:left;"><code>success</code></td><td style="text-align:left;">否</td><td style="text-align:left;">成功回调函数</td></tr><tr><td style="text-align:left;"><code>fail</code></td><td style="text-align:left;">否</td><td style="text-align:left;">失败回调函数</td></tr><tr><td style="text-align:left;"><code>complete</code></td><td style="text-align:left;">否</td><td style="text-align:left;">结束回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h3 id="success-返回参数" tabindex="-1">success 返回参数 <a class="header-anchor" href="#success-返回参数" aria-label="Permalink to &quot;success 返回参数&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;">Object/String/ArrayBuffer</td><td style="text-align:left;">服务器返回<strong>数据</strong></td></tr><tr><td style="text-align:left;"><code>statusCode</code></td><td style="text-align:left;">Number</td><td style="text-align:left;">服务器返回 <strong><code>HTTP</code> 状态码</strong></td></tr><tr><td style="text-align:left;"><code>header</code></td><td style="text-align:left;">Object</td><td style="text-align:left;">服务器返回 <code>HTTP Response Header</code></td></tr><tr><td style="text-align:left;"><code>cookies</code></td><td style="text-align:left;"><code>Array.&lt;string&gt;</code></td><td style="text-align:left;">服务器返回 <code>cookies</code>，格式为字符串数组</td></tr></tbody></table><p><em>data 数据说明</em></p><p>如果<code>data</code>不是<code>String</code>，会被转为 <code>String</code></p><ul><li><code>GET</code> 方法：会将数据转换为 query string。 <ul><li><code>{ name: &#39;name&#39;, age: 18 }</code> =》 <code>name=name&amp;age=18</code>。</li></ul></li><li><code>POST</code> 方法 <ul><li><code>header[&#39;content-type&#39;]</code> 为 <code>application/json</code> ，会进行 <code>JSON</code> 序列化。</li><li><code>header[&#39;content-type&#39;]</code> 为 <code>application/x-www-form-urlencoded</code> ，会将数据转换为 <code>query string</code></li></ul></li></ul><h3 id="requesttask" tabindex="-1">requestTask <a class="header-anchor" href="#requesttask" aria-label="Permalink to &quot;requestTask&quot;">​</a></h3><p>通过<code>requestTask</code>对象，可中断请求任务</p><blockquote><p>必须传<code>sucess/fail/complete</code>参数中一个，如果不传，将会返回<code>Promise</code>对象</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> requestTask </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">request</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://www.example.com/request</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//仅为示例，并非真实接口地址。</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">complete</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">requestTask</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abort</span><span style="color:#A6ACCD;">()</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>abort</code></td><td style="text-align:left;"><strong>中断</strong>请求任务</td></tr><tr><td style="text-align:left;"><code>offHeadersReceived</code></td><td style="text-align:left;"><strong>取消监听</strong> <code>HTTP Response Header</code> 事件，仅<code>微信小程序平台</code>支持</td></tr><tr><td style="text-align:left;"><code>onHeadersReceived</code></td><td style="text-align:left;"><strong>监听</strong> <code>HTTP Response Header</code> 事件。会比请求完成事件更早，仅<code>微信小程序平台</code>支持</td></tr></tbody></table><h3 id="tips" tabindex="-1">Tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;Tips&quot;">​</a></h3><ul><li>请求的 <code>header</code> 中 <code>content-type</code> 默认为 <code>application/json</code>。</li><li>避免在 <code>header</code> 中使用中文，或者使用 <code>encodeURIComponent</code> 进行编码，否则在百度小程序报错。</li><li>网络请求的 <code>超时时间</code> 可以统一在 <code>manifest.json</code> 中配置 <a href="https://uniapp.dcloud.io/collocation/manifest?id=networktimeout" target="_blank" rel="noreferrer">networkTimeout</a>。</li><li>H5 端本地调试需注意跨域问题，参考：<a href="https://ask.dcloud.net.cn/article/35267" target="_blank" rel="noreferrer">调试跨域问题解决方案</a></li><li>注意小程序端不支持自动保持 cookie，服务器应避免验证 cookie。如果服务器无法修改，通过<a href="https://github.com/charleslo1/weapp-cookie" target="_blank" rel="noreferrer">工具</a> 请求时带 cookie 并将响应 cookie 存本地</li><li>根据 W3C 规范，H5 端无法获取 response header 中 Set-Cookie、Set-Cookie2 这 2 个字段，对于跨域请求，允许获取的 response header 字段只限于“simple response header”和“Access-Control-Expose-Headers”（<a href="https://www.w3.org/TR/cors/#access-control-allow-credentials-response-header" target="_blank" rel="noreferrer">详情</a>）</li><li>低版本手机自身<strong>不支持 <code>ipv6</code></strong>，如果服务器仅允许 ipv6，会导致老手机无法正常运行或访问速度非常慢</li><li>单次网络请求数据量建议控制在<code>50K</code>以下（仅指 json 数据，不含图片），过多数据应分页获取</li></ul><h2 id="uni-uploadfile-object" tabindex="-1">uni.uploadFile(OBJECT) <a class="header-anchor" href="#uni-uploadfile-object" aria-label="Permalink to &quot;uni.uploadFile(OBJECT)&quot;">​</a></h2><p>本地资源上传到开发者服务器，客户端发起一个 <code>POST</code> 请求，其中 <code>content-type</code> 为 <code>multipart/form-data</code></p><p><strong>OBJECT 参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">开发者<strong>服务器 <code>url</code></strong></td></tr><tr><td style="text-align:left;"><code>files</code></td><td style="text-align:left;">否</td><td style="text-align:left;">需要上传的<strong>文件列表</strong>。*使用 <code>files</code> 时，<code>filePath</code> 和 <code>name</code> 不生效。</td></tr><tr><td style="text-align:left;"><code>fileType</code></td><td style="text-align:left;">见平台差异说明</td><td style="text-align:left;">文件<strong>类型</strong>，image/video/audio</td></tr><tr><td style="text-align:left;"><code>file</code></td><td style="text-align:left;">否</td><td style="text-align:left;">要上传的<strong>文件对象</strong></td></tr><tr><td style="text-align:left;"><code>filePath</code></td><td style="text-align:left;">是</td><td style="text-align:left;">要上传<strong>文件资源路径</strong></td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">是</td><td style="text-align:left;">文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容</td></tr><tr><td style="text-align:left;">header</td><td style="text-align:left;">否</td><td style="text-align:left;">HTTP 请求 Header, header 中不能设置 Referer。</td></tr><tr><td style="text-align:left;">timeout</td><td style="text-align:left;">否</td><td style="text-align:left;">超时时间，单位 ms</td></tr><tr><td style="text-align:left;">formData</td><td style="text-align:left;">否</td><td style="text-align:left;">HTTP 请求中其他额外的 form data</td></tr><tr><td style="text-align:left;">success</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用成功的回调函数</td></tr><tr><td style="text-align:left;">fail</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用失败的回调函数</td></tr><tr><td style="text-align:left;">complete</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h1 id="路由与页面跳转" tabindex="-1">路由与页面跳转 <a class="header-anchor" href="#路由与页面跳转" aria-label="Permalink to &quot;路由与页面跳转&quot;">​</a></h1><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://uniapp.dcloud.io/api/router?id=navigateto" target="_blank" rel="noreferrer"><code>uni.navigateTo</code>(OBJECT)</a></td><td><strong>保留</strong>当前页面，<strong>跳转</strong>到某个页面</td></tr><tr><td><a href="https://uniapp.dcloud.io/api/router?id=redirectto" target="_blank" rel="noreferrer"><code>uni.redirectTo</code>(OBJECT)</a></td><td><strong>关闭</strong>当前页面，<strong>跳转</strong>到某个页面</td></tr><tr><td><a href="https://uniapp.dcloud.io/api/router?id=relaunch" target="_blank" rel="noreferrer"><code>uni.reLaunch</code>(OBJECT)</a></td><td><strong>关闭所有</strong>页面，<strong>打开</strong>某个页面</td></tr><tr><td><a href="https://uniapp.dcloud.io/api/router?id=switchtab" target="_blank" rel="noreferrer"><code>uni.switchTab</code>(OBJECT)</a></td><td><strong>跳转到 <code>tabBar</code></strong> 页面，并<strong>关闭所有非 <code>tabBar</code></strong> 页面</td></tr><tr><td><a href="https://uniapp.dcloud.io/api/router?id=navigateback" target="_blank" rel="noreferrer"><code>uni.navigateBack</code>(OBJECT)</a></td><td><strong>关闭</strong>当前页面，<strong>返回上一页面</strong>或<strong>多级页面</strong></td></tr><tr><td><a href="https://uniapp.dcloud.io/api/preload-page?id=preloadpage" target="_blank" rel="noreferrer"><code>uni.preloadPage</code>(OBJECT)</a></td><td><strong>预加载</strong>页面</td></tr><tr><td><a href="https://uniapp.dcloud.io/api/preload-page?id=unpreloadpage" target="_blank" rel="noreferrer"><code>uni.unPreloadPage</code>(OBJECT)</a></td><td><strong>取消预载</strong>页面</td></tr></tbody></table><h2 id="uni-navigateto" tabindex="-1">uni.navigateTo <a class="header-anchor" href="#uni-navigateto" aria-label="Permalink to &quot;uni.navigateTo&quot;">​</a></h2><p><strong>保留</strong>当前页面，<strong>跳转</strong>到某个页面</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;">String</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;"></td><td style="text-align:left;">应用内<strong>非 <code>tabBar</code> 的页面的路径</strong> , 路径后可以带参数</td></tr><tr><td style="text-align:left;"><code>animationType</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">pop-in</td><td style="text-align:left;">窗口显示的<strong>动画效果</strong></td></tr><tr><td style="text-align:left;"><code>animationDuration</code></td><td style="text-align:left;">Number</td><td style="text-align:left;">否</td><td style="text-align:left;">300</td><td style="text-align:left;">窗口<strong>动画持续时间</strong>(<code>ms</code>)</td></tr><tr><td style="text-align:left;"><code>events</code></td><td style="text-align:left;">Object</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;">页面间<strong>通信接口</strong>，监听<strong>被打开</strong>页面发送<strong>到当前页面</strong>的<strong>数据</strong>。<em>2.8.9+</em></td></tr><tr><td style="text-align:left;"><code>success</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;"><strong>成功</strong>的回调函数</td></tr><tr><td style="text-align:left;"><code>fail</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;"><strong>失败</strong>的回调函数</td></tr><tr><td style="text-align:left;"><code>complete</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"></td><td style="text-align:left;"><strong>结束</strong>的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h3 id="url" tabindex="-1">url <a class="header-anchor" href="#url" aria-label="Permalink to &quot;url&quot;">​</a></h3><p>参数与路径之间使用<code>?</code>分隔，参数键与参数值用<code>=</code>相连，不同参数用<code>&amp;</code>分隔</p><blockquote><p>如<code>path?key=value&amp;key2=value2</code>，下一个页面的<code>onLoad</code>函数<strong>可得到传递的参数</strong></p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//在起始页面跳转并传递参数</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test?id=1&amp;name=uniapp</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 接受参数</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">onLoad</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">option</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//option为object类型，会序列化上个页面传递的参数</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">option</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">option</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><strong><code>url</code>有长度限制</strong>，太长的字符串会传递失败，可改用<a href="https://uniapp.dcloud.io/collocation/frame/communication" target="_blank" rel="noreferrer">窗体通信</a>、<a href="https://ask.dcloud.net.cn/article/35021" target="_blank" rel="noreferrer">全局变量</a>，</p><p>参数中<strong>出现空格等特殊字符</strong>时需要对参数进行编码</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;"> :url=&quot;&#39;/pages/test/test?item=&#39;+ encodeURIComponent(JSON.stringify(item))&quot;&gt;&lt;/navigator&gt;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 在test.vue页面接受参数</span></span>
<span class="line"><span style="color:#FFCB6B;">onLoad</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">option</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">decodeURIComponent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">option</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="event" tabindex="-1">event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;event&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 2.8.9+ 支持</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pages/test?id=1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">events</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">acceptDataFromOpenedPage</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">someEvent</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 通过eventChannel向被打开页面传送数据</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">eventChannel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emit</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">acceptDataFromOpenerPage</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// uni.navigateTo 目标页面 pages/test.vue</span></span>
<span class="line"><span style="color:#FFCB6B;">onLoad</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">option</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">option</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">eventChannel</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">getOpenerEventChannel</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">eventChannel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emit</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">acceptDataFromOpenedPage</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">eventChannel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emit</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">someEvent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 监听acceptDataFromOpenerPage事件，获取上一页面通过eventChannel传送到当前页面的数据</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">eventChannel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">acceptDataFromOpenerPage</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="tips-1" tabindex="-1">Tips <a class="header-anchor" href="#tips-1" aria-label="Permalink to &quot;Tips&quot;">​</a></h3><ul><li>页面跳转路径<strong>有层级限制</strong>，不能无限制跳转新页面</li><li>跳转到 <code>tabBar</code> 页面<strong>只能使用</strong> <code>switchTab</code> 跳转</li><li><strong>目标页面必须</strong>是在<code>pages.json</code>里<strong>注册</strong>的 vue 页面</li><li>打开<code>web url</code><ul><li>App 平台，使用 <a href="http://www.html5plus.org/doc/zh_cn/runtime.html#plus.runtime.openURL" target="_blank" rel="noreferrer">plus.runtime.openURL</a>或<code>web-view</code>组件</li><li>H5 平台，使用 <code>window.open</code></li><li>小程序平台，使用 web-view 组件（<code>url</code>需在联网白名单）</li></ul></li></ul><h2 id="uni-redirectto" tabindex="-1">uni.redirectTo <a class="header-anchor" href="#uni-redirectto" aria-label="Permalink to &quot;uni.redirectTo&quot;">​</a></h2><p><strong>关闭所有</strong>页面，<strong>打开</strong>某个页面</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;">String</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">应用内<strong>非 <code>tabBar</code> 的页面路径</strong>，路径后可以带参数。</td></tr><tr><td style="text-align:left;"><code>success</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>成功</strong>回调函数</td></tr><tr><td style="text-align:left;"><code>fail</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>失败</strong>回调函数</td></tr><tr><td style="text-align:left;"><code>complete</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>结束</strong>回调函数（调用成功、失败都会执行）</td></tr></tbody></table><p><strong>跳转到 <code>tabBar</code> 页面只能使用 <code>switchTab</code> 跳转</strong></p><h2 id="uni-relaunch" tabindex="-1">uni.reLaunch <a class="header-anchor" href="#uni-relaunch" aria-label="Permalink to &quot;uni.reLaunch&quot;">​</a></h2><p><strong>关闭所有</strong>页面，<strong>打开</strong>某个页面</p><p><em>参数同 <code>redirect</code></em></p><p>调用了 <a href="https://uniapp.dcloud.net.cn/api/preload-page" target="_blank" rel="noreferrer"><code>uni.preloadPage</code>(OBJECT)</a> 不会关闭，仅触发生命周期 <code>onHide</code></p><p><strong>H5 端</strong></p><ul><li>调用<code>uni.reLaunch</code>之前页面栈会销毁，但无法清空历史记录，<code>navigateBack</code>不能返回</li><li>存在历史记录，点击浏览器<em>返回按钮</em>或*调用<code>history.back()</code>*仍可以导航到其他历史记录</li></ul><h2 id="uni-switchtab" tabindex="-1">uni.switchTab <a class="header-anchor" href="#uni-switchtab" aria-label="Permalink to &quot;uni.switchTab&quot;">​</a></h2><p><strong>跳转到 <code>tabBar</code></strong> 页面，并<strong>关闭所有非 <code>tabBar</code></strong> 页面</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;">String</td><td style="text-align:left;"><strong>是</strong></td><td style="text-align:left;">需要<strong>跳转的 <code>tabBar</code> 页面的路径</strong>（<strong>需</strong> pages.json 的 tabBar 字段<strong>定义</strong>的页面），路径后<strong>不能带参数</strong></td></tr><tr><td style="text-align:left;"><code>success</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>成功</strong>回调函数</td></tr><tr><td style="text-align:left;"><code>fail</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>失败</strong>回调函数</td></tr><tr><td style="text-align:left;"><code>complete</code></td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;"><strong>结束</strong>回调函数（调用成功、失败都会执行）</td></tr></tbody></table><p>调用了 <a href="https://uniapp.dcloud.net.cn/api/preload-page" target="_blank" rel="noreferrer"><code>uni.preloadPage</code>(OBJECT)</a> 不会关闭，仅触发生命周期 <code>onHide</code></p><h2 id="uni-navigateback" tabindex="-1">uni.navigateBack <a class="header-anchor" href="#uni-navigateback" aria-label="Permalink to &quot;uni.navigateBack&quot;">​</a></h2><p><strong>关闭</strong>当前页面，<strong>返回上一页面</strong>或<strong>多级页面</strong>。可通过 <code>getCurrentPages()</code> 获取当前的页面栈，决定需要返回几层。</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>delta</code></td><td style="text-align:left;">Number</td><td style="text-align:left;">否</td><td style="text-align:left;">1</td><td style="text-align:left;"><strong>返回的页面数</strong>，如果 d<strong>elta 大于现有</strong>页面数，<strong>返回首页</strong></td></tr><tr><td style="text-align:left;"><code>animationType</code></td><td style="text-align:left;">String</td><td style="text-align:left;">否</td><td style="text-align:left;">pop-out</td><td style="text-align:left;">窗口关闭的<strong>动画效果</strong></td></tr><tr><td style="text-align:left;"><code>animationDuration</code></td><td style="text-align:left;">Number</td><td style="text-align:left;">否</td><td style="text-align:left;">300</td><td style="text-align:left;">窗口关闭动画的<strong>持续时间</strong>（<code>ms</code>）</td></tr></tbody></table><p><code>navigateTo</code> 跳转，<strong>页面会入堆栈</strong>，而 <code>redirectTo</code> <strong>则不会</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// A页面</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">B?id=1</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// B页面</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">C?id=1</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// C页面内 navigateBack，返回A页面</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateBack</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">delta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="tips-2" tabindex="-1">Tips <a class="header-anchor" href="#tips-2" aria-label="Permalink to &quot;Tips&quot;">​</a></h3><ul><li><code>navigateTo</code>, <code>redirectTo</code> 只能打开非 tabBar 页面</li><li><code>switchTab</code> 只能打开 <code>tabBar</code> 页面</li><li><code>reLaunch</code> 可以打开任意页面</li><li>不能在 <code>App.vue</code> 里面进行页面跳转。</li><li>H5 端页面刷新之后页面栈会消失，此时<code>navigateBack</code>不能返回，如果一定要返回可以使用<code>history.back()</code>导航到浏览器的其他历史记录。</li></ul><h2 id="窗口动画" tabindex="-1">窗口动画 <a class="header-anchor" href="#窗口动画" aria-label="Permalink to &quot;窗口动画&quot;">​</a></h2><p>窗口的显示/关闭动画效果，支持在 API、组件、pages.json 中配置，优先级为：<code>API = 组件 &gt; pages.json</code></p><blockquote><p><em>仅 App 支持</em>。<em>小程序</em>自身不支持自定义动画。<em>H5</em>的窗体动画可使用常规单页动画处理方案，见<a href="https://ext.dcloud.net.cn/plugin?id=659&amp;tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noreferrer">H5 下单页动画示例</a></p></blockquote><h3 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h3><p>有效的路由 API</p><ul><li><code>navigateTo</code></li><li><code>navigateBack</code></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../test/test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">animationType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pop-in</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">animationDuration</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateBack</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">delta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">animationType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pop-out</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">animationDuration</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h3><p><code>open-type</code> 有效值</p><ul><li><code>navigateTo</code></li><li><code>navigateBack</code></li></ul><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigator</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">animation-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pop-in</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">animation-duration</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">300</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">url</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../test/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">navigator</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigator</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">animation-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pop-out</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">animation-duration</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">300</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">open-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">navigateBack</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">navigator</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">navigator</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="pages-json" tabindex="-1">pages.json <a class="header-anchor" href="#pages-json" aria-label="Permalink to &quot;pages.json&quot;">​</a></h3><p><code>pages.json</code> 中配置的是<strong>窗口显示</strong>的动画</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">app-plus</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">animationType</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fade-in</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">animationDuration</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">显示动画</th><th style="text-align:left;">关闭动画</th><th style="text-align:left;">显示动画描述（关闭动画与之相反）</th></tr></thead><tbody><tr><td style="text-align:left;">slide-in-right</td><td style="text-align:left;">slide-out-right</td><td style="text-align:left;">新窗体从<strong>右</strong>侧进入</td></tr><tr><td style="text-align:left;">slide-in-left</td><td style="text-align:left;">slide-out-left</td><td style="text-align:left;">新窗体从<strong>左</strong>侧进入</td></tr><tr><td style="text-align:left;">slide-in-top</td><td style="text-align:left;">slide-out-top</td><td style="text-align:left;">新窗体从<strong>顶</strong>部进入</td></tr><tr><td style="text-align:left;">slide-in-bottom</td><td style="text-align:left;">slide-out-bottom</td><td style="text-align:left;">新窗体从<strong>底</strong>部进入</td></tr><tr><td style="text-align:left;">pop-in</td><td style="text-align:left;">pop-out</td><td style="text-align:left;">新窗体从<strong>左侧进入</strong>，且<strong>老窗体被挤压</strong>而出</td></tr><tr><td style="text-align:left;">fade-in</td><td style="text-align:left;">fade-out</td><td style="text-align:left;">新窗体从<strong>透明</strong>到<strong>不透明</strong>逐渐显示</td></tr><tr><td style="text-align:left;">zoom-out</td><td style="text-align:left;">zoom-in</td><td style="text-align:left;">新窗体从<strong>小到大</strong>缩放显示</td></tr><tr><td style="text-align:left;">zoom-fade-out</td><td style="text-align:left;">zoom-fade-in</td><td style="text-align:left;">新窗体从<strong>小到大</strong>逐渐放大并且从<strong>透明到不透明</strong>逐渐显示</td></tr><tr><td style="text-align:left;">none</td><td style="text-align:left;">none</td><td style="text-align:left;">无动画</td></tr></tbody></table><ul><li><strong>纯 nvue 项目</strong>（render 为 native） <ul><li>窗体动画默认进入动画为<code>pop-in</code>，返回为<code>pop-out</code>。</li><li>如果想修改动画类型，<strong>只能通过</strong><code>uni.navigateTo</code> API<strong>修改</strong>，在<strong>组件</strong>或**<code>pages.json</code><strong>里配</strong>置动画类型无效**</li></ul></li><li><strong>非纯 nvue 项目</strong><ul><li>App 端窗体动画，默认进入动画为<code>slider-in-right</code>，默认返回动画为<code>pop-out</code></li></ul></li><li>webview 中<strong>嵌入 uni-app H5</strong><ul><li>使用 <code>uni.webView.navigateTo</code>跳转页面</li></ul></li></ul>`,77),o=[n];function p(r,c,d,i,y,g){return e(),s("div",null,o)}const f=t(a,[["render",p]]);export{F as __pageData,f as default};
